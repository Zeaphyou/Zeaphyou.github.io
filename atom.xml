<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>有幸遇见</title>
  
  
  <link href="https://mylucky.cyou/atom.xml" rel="self"/>
  
  <link href="https://mylucky.cyou/"/>
  <updated>2023-12-20T12:35:47.018Z</updated>
  <id>https://mylucky.cyou/</id>
  
  <author>
    <name>Yeavast</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用Cloudflare Workers进行网站分流负载</title>
    <link href="https://mylucky.cyou/post/20231220203547.html"/>
    <id>https://mylucky.cyou/post/20231220203547.html</id>
    <published>2023-12-20T12:35:47.000Z</published>
    <updated>2023-12-20T12:35:47.018Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>ZgoCloud Los Angeles Performance VPS - Specials - Starter 简评</title>
    <link href="https://mylucky.cyou/post/20231219092306.html"/>
    <id>https://mylucky.cyou/post/20231219092306.html</id>
    <published>2023-12-19T01:23:06.000Z</published>
    <updated>2023-12-19T08:55:51.120Z</updated>
    
    <content type="html"><![CDATA[<p>这两天在不少的主机频道看到有推ZgoCloud这个商家的，我对于主机商了解的不是很多，也就跟大家一样，平时看得多听得多的是DMIT、瓦工之类的各种软硬文上常见的那些，但是看了下推的配置和线路，感觉又好像还行的样子，想着价格又不是很高，就买了这款做个简单的评测试试。</p><p>先说一下注意事项：这家的下单时候有反欺诈设置，我在下单时候填的地址是美国的，但是看了下surge的记录，是走了final，香港的IP连过去的，然后一下单马上收到4封email，除了一些订单相关的信息外，还有一封内容是：</p><blockquote><p>Dear XXXXXX,</p><p>Unfortunatelly our system has automatically classified your recent order as Fraudulent</p><p>Please contact us at your earliest convenience to resolve this case, please submit order number below for reference:</p><p>ORDER NUMBER: XXXXXXXX</p></blockquote><p>我是没管它，直接付款结束后让ChatGPT以我不是欺诈的是正常用户写了个email过去，大概十几分钟回复了个工单说已经恢复正常了，还有就是它家的订单完成后，要自己去panel里面选择安装操作系统设置ssh key的。</p><p>我这里又踩了一个坑是装完系统设置好ssh key后用termius链接时候发现一直连不上，用 ping.sx 查看IP又是好着的，后面发现还是一样，走了final，于是设置改为直连就好了。</p><h2 id="套餐"><a href="#套餐" class="headerlink" title="套餐"></a>套餐</h2><table><thead><tr><th align="left">处理器</th><th>内存</th><th>硬盘</th><th>流量</th><th>带宽</th><th>价格</th><th>购买</th></tr></thead><tbody><tr><td align="left">1x</td><td>1GB</td><td>25GB</td><td>1.0TB&#x2F;月</td><td>500M</td><td>$38.9&#x2F;年</td><td><a href="https://clients.zgovps.com/?cmd=cart&action=add&affid=320&id=60">购买</a></td></tr><tr><td align="left">2x</td><td>2GB</td><td>40GB</td><td>2.0TB&#x2F;月</td><td>500M</td><td>$58.9&#x2F;年</td><td><a href="https://clients.zgovps.com/?cmd=cart&action=add&affid=320&id=61">购买</a></td></tr></tbody></table><p>商家支持 PayPal 和支付宝、信用卡购买。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>本次采用的是默认的Debian 12系统，安装了curl，其它未做调整</p><p>采用的是一键脚本：</p><p><code>curl -L https://gitlab.com/spiritysdx/za/-/raw/main/ecs.sh -o ecs.sh &amp;&amp; chmod +x ecs.sh &amp;&amp; bash ecs.sh</code></p><h3 id="性能基准测试"><a href="#性能基准测试" class="headerlink" title="性能基准测试"></a>性能基准测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">---------------------基础信息查询--感谢所有开源项目---------------------</span><br><span class="line"> CPU 型号          : AMD Ryzen 9 7950X 16-Core Processor</span><br><span class="line"> CPU 核心数        : 1</span><br><span class="line"> CPU 频率          : 4491.540 MHz</span><br><span class="line"> CPU 缓存          : L1: 32.00 KB / L2: 1.00 MB / L3: 64.00 MB</span><br><span class="line"> 硬盘空间          : 2.02 GiB / 24.82 GiB</span><br><span class="line"> 启动盘路径        : /dev/sda3</span><br><span class="line"> 内存              : 230.84 MiB / 925.86 MiB</span><br><span class="line"> Swap              : [ no swap partition or swap file detected ]</span><br><span class="line"> 系统在线时间      : 0 days, 1 hour 1 min</span><br><span class="line"> 负载              : 0.00, 0.00, 0.00</span><br><span class="line"> 系统              : Debian GNU/Linux 12 (bookworm) (x86_64)</span><br><span class="line"> AES-NI指令集      : ✔ Enabled</span><br><span class="line"> VM-x/AMD-V支持    : ✔ Enabled</span><br><span class="line"> 架构              : x86_64 (64 Bit)</span><br><span class="line"> 内核              : 6.1.0-16-amd64</span><br><span class="line"> TCP加速方式       : cubic</span><br><span class="line"> 虚拟化架构        : KVM</span><br><span class="line"> NAT类型           : 开放型</span><br><span class="line"> IPV4 ASN          : AS8796 FASTNET DATA INC</span><br><span class="line"> IPV4 位置         : Rancho Cucamonga / California / US</span><br><span class="line"> IPV6 ASN          : AS8796 FASTNET DATA INC</span><br><span class="line"> IPV6 位置         : Los Angeles / US-CA</span><br><span class="line"> IPV6 子网掩码     : 64</span><br><span class="line">---------------------CPU测试--感谢lemonbench开源------------------------</span><br><span class="line"> -&gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec)</span><br><span class="line"> 1 线程测试(1核)得分: 6013 Scores</span><br><span class="line">---------------------内存测试--感谢lemonbench开源-----------------------</span><br><span class="line"> -&gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec)</span><br><span class="line"> 单线程读测试:74006.90 MB/s</span><br><span class="line"> 单线程写测试:41536.28 MB/s</span><br><span class="line">------------------磁盘dd读写测试--感谢lemonbench开源--------------------</span><br><span class="line"> -&gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode)</span><br><span class="line"> 测试操作写速度读速度</span><br><span class="line"> 100MB-4K Block130 MB/s (31.65 IOPS, 0.81s)182 MB/s (44549 IOPS, 0.57s)</span><br><span class="line"> 1GB-1M Block932 MB/s (889 IOPS, 1.13s)4.5 GB/s (4260 IOPS, 0.23s)</span><br><span class="line">---------------------磁盘fio读写测试--感谢yabs开源----------------------</span><br><span class="line"></span><br><span class="line">| Block Size | 4k            (IOPS) | 64k           (IOPS) |</span><br><span class="line">| ---------- | -------------------- | -------------------- |</span><br><span class="line">| Read       | 525.04 MB/s (131.2k) | 2.77 GB/s    (43.4k) |</span><br><span class="line">| Write      | 526.42 MB/s (131.6k) | 2.79 GB/s    (43.6k) |</span><br><span class="line">| Total      | 1.05 GB/s   (262.8k) | 5.57 GB/s    (87.0k) |</span><br><span class="line">| Block Size | 512k          (IOPS) | 1m            (IOPS) |</span><br><span class="line"></span><br><span class="line">  ------   | ---            ----  | ----           ---- </span><br><span class="line">Read       | 2.21 GB/s     (4.3k) | 2.48 GB/s     (2.4k)</span><br><span class="line">Write      | 2.32 GB/s     (4.5k) | 2.65 GB/s     (2.5k)</span><br><span class="line">Total      | 4.53 GB/s     (8.8k) | 5.14 GB/s     (5.0k)</span><br><span class="line"></span><br><span class="line">### </span><br></pre></td></tr></table></figure><h3 id="流媒体平台及游戏区域限制测试"><a href="#流媒体平台及游戏区域限制测试" class="headerlink" title="流媒体平台及游戏区域限制测试"></a>流媒体平台及游戏区域限制测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">---------------------流媒体解锁--感谢sjlleo开源-------------------------</span><br><span class="line">以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用</span><br><span class="line">----------------Youtube----------------</span><br><span class="line">[IPv4]</span><br><span class="line">连接方式: Youtube Video Server</span><br><span class="line">视频缓存节点地域: 美国  洛杉机(LAX17S56)</span><br><span class="line">Youtube识别地域: 无信息(null)</span><br><span class="line">[IPv6]</span><br><span class="line">连接方式: Youtube Video Server</span><br><span class="line">视频缓存节点地域: 美国  洛杉机(LAX17S56)</span><br><span class="line">Youtube识别地域: 无信息(null)</span><br><span class="line">----------------Netflix----------------</span><br><span class="line">[IPv4]</span><br><span class="line">您的出口IP完整解锁Netflix，支持非自制剧的观看</span><br><span class="line">NF所识别的IP地域信息：美国</span><br><span class="line">[IPv6]</span><br><span class="line">您的出口IP完整解锁Netflix，支持非自制剧的观看</span><br><span class="line">NF所识别的IP地域信息：美国</span><br><span class="line">---------------DisneyPlus---------------</span><br><span class="line">[IPv4]</span><br><span class="line">当前IPv4出口解锁DisneyPlus</span><br><span class="line">区域：美国区</span><br><span class="line">[IPv6]</span><br><span class="line">当前IPv6出口解锁DisneyPlus</span><br><span class="line">区域：美国区</span><br><span class="line">解锁Youtube，Netflix，DisneyPlus上面和下面进行比较，不同之处自行判断</span><br><span class="line">----------------流媒体解锁--感谢RegionRestrictionCheck开源--------------</span><br><span class="line"> 以下为IPV4网络测试，若无IPV4网络则无输出</span><br><span class="line">============[ Multination ]============</span><br><span class="line"> Dazn:Yes (Region: US)</span><br><span class="line"> HotStar:Yes (Region: US)</span><br><span class="line"> Disney+:Yes (Region: US)</span><br><span class="line"> Netflix:Yes (Region: US)</span><br><span class="line"> YouTube Premium:Yes</span><br><span class="line"> Amazon Prime Video:Yes (Region: US)</span><br><span class="line"> TVBAnywhere+:Yes</span><br><span class="line"> iQyi Oversea Region:US</span><br><span class="line"> Viu.com:No</span><br><span class="line"> YouTube CDN:Los Angeles, CA </span><br><span class="line"> Netflix Preferred CDN:Chicago, IL  </span><br><span class="line"> Spotify Registration:Yes (Region: US)</span><br><span class="line"> Steam Currency:USD</span><br><span class="line"> ChatGPT:Yes</span><br><span class="line"></span><br><span class="line"> Bing Region:US</span><br><span class="line">=======================================</span><br><span class="line"></span><br><span class="line"> 以下为IPV6网络测试，若无IPV6网络则无输出</span><br><span class="line">============[ Multination ]============</span><br><span class="line"> Dazn:Failed (Network Connection)</span><br><span class="line"> HotStar:Yes (Region: US)</span><br><span class="line"> Disney+:Yes (Region: US)</span><br><span class="line"> Netflix:Yes (Region: US)</span><br><span class="line"> YouTube Premium:Yes</span><br><span class="line"> Amazon Prime Video:Unsupported</span><br><span class="line"> TVBAnywhere+:Failed (Network Connection)</span><br><span class="line"> iQyi Oversea Region:Failed</span><br><span class="line"> Viu.com:Failed</span><br><span class="line"> YouTube CDN:Los Angeles, CA </span><br><span class="line"> Netflix Preferred CDN:Los Angeles, CA  </span><br><span class="line"> Spotify Registration:Yes (Region: US)</span><br><span class="line"> Steam Currency:Failed (Network Connection)</span><br><span class="line"> ChatGPT:Failed</span><br><span class="line"></span><br><span class="line"> Bing Region:US</span><br><span class="line">=======================================</span><br><span class="line"></span><br><span class="line">---------------TikTok解锁--感谢lmc999的源脚本及fscarmen PR--------------</span><br><span class="line"> Tiktok Region:Failed</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>IPv4的解锁情况很不错，常用的都解锁了，套餐带1个IPv4一个IPv6，自己看情况可以平时把IPv6禁用掉。</p><h3 id="欺诈分数以及-IP-质量检测"><a href="#欺诈分数以及-IP-质量检测" class="headerlink" title="欺诈分数以及 IP 质量检测"></a>欺诈分数以及 IP 质量检测</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">-------------------欺诈分数以及IP质量检测--本脚本原创-------------------</span><br><span class="line"></span><br><span class="line">数据仅作参考，不代表100%准确，如果和实际情况不一致请手动查询多个数据库比对</span><br><span class="line"></span><br><span class="line">以下为各数据库编号，输出结果后将自带数据库来源对应的编号</span><br><span class="line"></span><br><span class="line">ipinfo数据库 ①  | scamalytics数据库 ②  | virustotal数据库 ③  | abuseipdb数据库 ④  | ip2location数据库   ⑤</span><br><span class="line"></span><br><span class="line">ip-api数据库 ⑥  | ipwhois数据库     ⑦  | ipregistry数据库 ⑧  | ipdata数据库    ⑨  | ipgeolocation数据库 ⑩</span><br><span class="line"></span><br><span class="line">欺诈分数(越低越好): 0②</span><br><span class="line"></span><br><span class="line">abuse得分(越低越好): 0④</span><br><span class="line"></span><br><span class="line">IP类型: </span><br><span class="line"></span><br><span class="line">  使用类型(usage_type):hosting①  Commercial⑤  hosting⑧  </span><br><span class="line"></span><br><span class="line">  公司类型(company_type):business①  business⑧  </span><br><span class="line"></span><br><span class="line">  云服务提供商(cloud_provider):  Yes⑧ </span><br><span class="line"></span><br><span class="line">  数据中心(datacenter):  No⑥ ⑨ </span><br><span class="line"></span><br><span class="line">  移动网络(mobile):  No⑥ </span><br><span class="line"></span><br><span class="line">  代理(proxy):  No① ② ⑥ ⑦ ⑧ ⑨ ⑩ </span><br><span class="line"></span><br><span class="line">  VPN(vpn):  No① ② ⑦ ⑧ </span><br><span class="line"></span><br><span class="line">  TOR(tor):  No① ② ⑦ ⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  TOR出口(tor_exit):  No⑧ </span><br><span class="line"></span><br><span class="line">  搜索引擎机器人(search_engine_robot):② </span><br><span class="line"></span><br><span class="line">  匿名代理(anonymous):  No⑦ ⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  攻击方(attacker):  No⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  滥用者(abuser):  No⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  威胁(threat):  No⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  iCloud中继(icloud_relay):  No① ⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  未分配IP(bogon):  No⑧ ⑨ </span><br><span class="line"></span><br><span class="line">黑名单记录统计(有多少个黑名单网站有记录): 无害0 恶意0 可疑0 未检测89 ③</span><br><span class="line"></span><br><span class="line">Google搜索可行性：YES</span><br><span class="line"></span><br><span class="line">------以下为IPV6检测------</span><br><span class="line"></span><br><span class="line">欺诈分数(越低越好): 0②</span><br><span class="line"></span><br><span class="line">abuse得分(越低越好): 0④</span><br><span class="line"></span><br><span class="line">IP类型: Data Center/Web Hosting/Transit⑤</span><br></pre></td></tr></table></figure><h3 id="三网回程路由及速度测试"><a href="#三网回程路由及速度测试" class="headerlink" title="三网回程路由及速度测试"></a>三网回程路由及速度测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">----------------三网回程--感谢zhanghanyun/backtrace开源-----------------</span><br><span class="line"></span><br><span class="line">国家: US 城市: Rancho Cucamonga 服务商: AS8796 FASTNET DATA INC</span><br><span class="line"></span><br><span class="line">北京电信 219.141.136.12  联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">北京联通 202.106.50.1    联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">北京移动 221.179.155.161 移动CMI [普通线路]           </span><br><span class="line"></span><br><span class="line">上海电信 202.96.209.133  联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">上海联通 210.22.97.1     联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">上海移动 211.136.112.200 移动CMI [普通线路]           </span><br><span class="line"></span><br><span class="line">广州电信 58.60.188.222   联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">广州联通 210.21.196.6    联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">广州移动 120.196.165.24  移动CMI [普通线路]           </span><br><span class="line"></span><br><span class="line">成都电信 61.139.2.69     联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">成都联通 119.6.6.6       联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">成都移动 211.137.96.205  移动CMI [普通线路]           </span><br><span class="line"></span><br><span class="line">---------------------回程路由--感谢fscarmen开源及PR---------------------</span><br><span class="line"></span><br><span class="line">依次测试电信/联通/移动经过的地区及线路，核心程序来自ipip.net或nexttrace，请知悉!</span><br><span class="line"></span><br><span class="line">广州电信 58.60.188.222</span><br><span class="line"></span><br><span class="line">14.47 ms  AS8796  美国, 加利福尼亚州, 洛杉矶, technolink.top</span><br><span class="line"></span><br><span class="line">0.65 ms  *  局域网</span><br><span class="line"></span><br><span class="line">0.71 ms  AS10099  美国, 加利福尼亚州, 洛杉矶, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">131.56 ms  AS10099  中国, 香港, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">129.79 ms  AS9929  中国, 上海, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">155.82 ms  AS9929  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">159.13 ms  *  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">162.53 ms  AS4134  中国, 广东, 深圳, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">160.46 ms  AS4134  中国, 广东, 深圳, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">广州联通 210.21.196.6</span><br><span class="line"></span><br><span class="line">7.43 ms  AS8796  美国, 加利福尼亚州, 洛杉矶, technolink.top</span><br><span class="line"></span><br><span class="line">0.91 ms  *  局域网</span><br><span class="line"></span><br><span class="line">5.09 ms  *  局域网</span><br><span class="line"></span><br><span class="line">1.20 ms  AS10099  美国, 加利福尼亚州, 洛杉矶, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">138.15 ms  AS10099  中国, 上海, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">136.41 ms  AS9929  中国, 上海, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">162.33 ms  AS9929  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">165.16 ms  *  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">163.48 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">163.33 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">167.15 ms  AS17816  中国, 广东, 深圳, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">176.70 ms  AS17623  中国, 广东, 深圳, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">166.08 ms  AS17623  中国, 广东, 深圳, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">广州移动 120.196.165.24</span><br><span class="line"></span><br><span class="line">0.94 ms  *  局域网</span><br><span class="line"></span><br><span class="line">20.36 ms  AS58807  美国, 加利福尼亚州, 洛杉矶, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">127.21 ms  AS58807  美国, 加利福尼亚州, 洛杉矶, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">126.39 ms  AS58807  中国, 上海, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">126.49 ms  AS9808  中国, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">126.38 ms  AS9808  中国, 上海, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">128.04 ms  AS9808  中国, 上海, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">151.40 ms  AS9808  中国, 北京, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">151.69 ms  AS9808  中国, 北京, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">152.22 ms  AS9808  中国, 北京, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">153.02 ms  AS56040  中国, 广东, 深圳, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">--------------------自动更新测速节点列表--本脚本原创--------------------</span><br><span class="line"></span><br><span class="line">位置 上传速度 下载速度 延迟  丢包率</span><br><span class="line"></span><br><span class="line">Speedtest.net 498.10 Mbps 462.01 Mbps 45.16  0.0%</span><br><span class="line"></span><br><span class="line">洛杉矶 498.39 Mbps 479.36 Mbps 2.60  NULL</span><br><span class="line"></span><br><span class="line">联通上海5G 15.87 Mbps 14.81 Mbps 133.12  0.0%</span><br><span class="line"></span><br><span class="line">联通WuXi 11.49 Mbps 52.76 Mbps 137.07  0.0%</span><br><span class="line"></span><br><span class="line">电信江苏5G 3.25 Mbps 377.72 Mbps 142.59  0.0%</span><br><span class="line"></span><br><span class="line">电信合肥5G 14.62 Mbps 10.97 Mbps 170.08  0.0%</span><br><span class="line"></span><br><span class="line">移动杭州5G 392.90 Mbps 315.31 Mbps 161.45  0.0%</span><br><span class="line"></span><br><span class="line">移动Beijing340 Mbps 272.19 Mbps 249.55  31.4%</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>官方宣传的是联通&#x2F;电信走的9929，移动走的CMIN2 AS58807，看了下测试结果是符合的，但是这个脚本的问题，没有识别到，将移动的CMIN2归为普通线路，实际回程是AS58807（移动精品网），这个是没错的。</p><p>总体来说带宽是符合宣传的500M的口子的，对标瓦工的GIA，价格也很实惠，还是值得购买的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这两天在不少的主机频道看到有推ZgoCloud这个商家的，我对于主机商了解的不是很多，也就跟大家一样，平时看得多听得多的是DMIT、瓦工之类的各种软硬文上常见的那些，但是看了下推的配置和线路，感觉又好像还行的样子，想着价格又不是很高，就买了这款做个简单的评测试试。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="vps教程" scheme="https://mylucky.cyou/categories/vps%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vps简评" scheme="https://mylucky.cyou/tags/vps%E7%AE%80%E8%AF%84/"/>
    
    <category term="vps" scheme="https://mylucky.cyou/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>Saltfish (咸鱼) 美国 SanJose CN2 GIA mini VPS 简评</title>
    <link href="https://mylucky.cyou/post/20231218170433.html"/>
    <id>https://mylucky.cyou/post/20231218170433.html</id>
    <published>2023-12-18T09:04:33.000Z</published>
    <updated>2023-12-19T08:55:31.425Z</updated>
    
    <content type="html"><![CDATA[<p>在前面写过<a href="(https://portal.saltyfish.io/index.php)">saltfish（咸鱼）</a>的美国San Jose地区9929线路的简评，我手里有它家的同地区的CN2 GIA线路的mini款，也简单的做一下评测。</p><p>对于CN2 GIA，相信只要是玩VPS的人就知道是什么意思，也就不用过多介绍了。</p><p>这款VPS的套餐是San Jose VPS - Premium Network，配置为mini，配置代码是sjc.p1.mini，大陆优化线路CN2 GIA</p><blockquote><p>saltfish家的Elite是9929线路，Premium是CN2 GIA线路。</p></blockquote><h2 id="套餐"><a href="#套餐" class="headerlink" title="套餐"></a>套餐</h2><table><thead><tr><th align="center">处理器</th><th align="center">内存</th><th align="center">硬盘</th><th align="center">流量</th><th align="center">带宽</th><th align="center">价格</th><th align="center">链接</th></tr></thead><tbody><tr><td align="center">1x</td><td align="center">1GB</td><td align="center">10GB SSD</td><td align="center">1.0TB&#x2F;月</td><td align="center">300M</td><td align="center">$20.4&#x2F;季度</td><td align="center"><a href="https://portal.saltyfish.io/store/sjc-premium">点击前往</a></td></tr></tbody></table><p>配置不算高，说白了就是搭建代理用的，CN2 GIA本身价格高昂，带宽也不高，这款也只有300M，只能说够用，流量有1T，量还是比较充足的，看流媒体啥的完全能满足需求。1C1G 10G硬盘的配置，放个个人blog啥的小项目玩玩也还是可以。这个套餐正价是$20.4&#x2F;季，年付81.6，而我买的这款是双十一活动价，正价的7.8折，算下来就是63.65美元&#x2F;年，循环出账，也就是一直是这个价格。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>采用的是这个一键脚本，用的顺序测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://gitlab.com/spiritysdx/za/-/raw/main/ecs.sh -o ecs.sh &amp;&amp; chmod +x ecs.sh &amp;&amp; bash ecs.sh</span><br></pre></td></tr></table></figure><h3 id="性能基准测试"><a href="#性能基准测试" class="headerlink" title="性能基准测试"></a>性能基准测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">---------------------基础信息查询--感谢所有开源项目---------------------</span><br><span class="line"></span><br><span class="line"> CPU 型号          : Intel Core Processor (Broadwell, IBRS)</span><br><span class="line"></span><br><span class="line"> CPU 核心数        : 1</span><br><span class="line"></span><br><span class="line"> CPU 频率          : 2294.686 MHz</span><br><span class="line"></span><br><span class="line"> CPU 缓存          : L1: 64.00 KB / L2: 4.00 MB / L3: 16.00 MB</span><br><span class="line"></span><br><span class="line"> 硬盘空间          : 7.14 GiB / 9.33 GiB</span><br><span class="line"></span><br><span class="line"> 启动盘路径        : /dev/sda2</span><br><span class="line"></span><br><span class="line"> 内存              : 723.97 MiB / 960.64 MiB</span><br><span class="line"></span><br><span class="line"> Swap              : [ no swap partition or swap file detected ]</span><br><span class="line"></span><br><span class="line"> 系统在线时间      : 9 days, 6 hour 54 min</span><br><span class="line"></span><br><span class="line"> 负载              : 0.12, 0.06, 0.02</span><br><span class="line"></span><br><span class="line"> 系统              : Debian GNU/Linux 11 (bullseye) (x86_64)</span><br><span class="line"></span><br><span class="line"> AES-NI指令集      : ✔ Enabled</span><br><span class="line"></span><br><span class="line"> VM-x/AMD-V支持    : ❌ Disabled</span><br><span class="line"></span><br><span class="line"> 架构              : x86_64 (64 Bit)</span><br><span class="line"></span><br><span class="line"> 内核              : 6.1.55-magictcp001</span><br><span class="line"></span><br><span class="line"> TCP加速方式       : bbr</span><br><span class="line"></span><br><span class="line"> 虚拟化架构        : KVM</span><br><span class="line"></span><br><span class="line"> NAT类型           : 开放型</span><br><span class="line"></span><br><span class="line"> IPV4 ASN          : AS41378 Kirino LLC</span><br><span class="line"></span><br><span class="line"> IPV4 位置         : San Jose / California / US</span><br><span class="line"></span><br><span class="line">---------------------CPU测试--感谢lemonbench开源------------------------</span><br><span class="line"></span><br><span class="line"> -&gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec)</span><br><span class="line"></span><br><span class="line"> 1 线程测试(1核)得分: 712 Scores</span><br><span class="line"></span><br><span class="line">---------------------内存测试--感谢lemonbench开源-----------------------</span><br><span class="line"></span><br><span class="line"> -&gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec)</span><br><span class="line"></span><br><span class="line"> 单线程读测试:16295.72 MB/s</span><br><span class="line"></span><br><span class="line"> 单线程写测试:6876.52 MB/s</span><br><span class="line"></span><br><span class="line">------------------磁盘dd读写测试--感谢lemonbench开源--------------------</span><br><span class="line"></span><br><span class="line"> -&gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode)</span><br><span class="line"></span><br><span class="line"> 测试操作写速度读速度</span><br><span class="line"></span><br><span class="line"> 100MB-4K Block25.5 MB/s (6227 IOPS, 4.11s)35.0 MB/s (8551 IOPS, 2.99s)</span><br><span class="line"></span><br><span class="line"> 1GB-1M Block765 MB/s (730 IOPS, 1.37s)937 MB/s (893 IOPS, 1.12s)</span><br><span class="line"></span><br><span class="line">---------------------磁盘fio读写测试--感谢yabs开源----------------------</span><br><span class="line"></span><br><span class="line">Block Size | 4k            (IOPS) | 64k           (IOPS)</span><br><span class="line"></span><br><span class="line">Less than 2GB of space available. Skipping disk test...</span><br></pre></td></tr></table></figure><p>机器上测试的时候发现被小伙伴拿去不知道乱七八糟的塞了些啥东西在里面，导致剩余空间有点不太够，所以磁盘读写这块没有完成，但是参照它家的9929线路性能，应该差不多吧。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Read       | 44.05 MB/s   (11.0k) | 536.18 MB/s   (8.3k)</span><br><span class="line"></span><br><span class="line">Write      | 44.13 MB/s   (11.0k) | 539.00 MB/s   (8.4k)</span><br><span class="line"></span><br><span class="line">Total      | 88.18 MB/s   (22.0k) | 1.07 GB/s    (16.7k)           |                      |                     </span><br><span class="line"></span><br><span class="line">Block Size | 512k          (IOPS) | 1m            (IOPS)</span><br><span class="line"></span><br><span class="line">  ------   | ---            ----  | ----           ---- </span><br><span class="line"></span><br><span class="line">Read       | 524.48 MB/s   (1.0k) | 520.93 MB/s    (508)</span><br><span class="line"></span><br><span class="line">Write      | 552.35 MB/s   (1.0k) | 555.63 MB/s    (542)</span><br><span class="line"></span><br><span class="line">Total      | 1.07 GB/s     (2.1k) | 1.07 GB/s     (1.0k)</span><br></pre></td></tr></table></figure><h3 id="流媒体平台及游戏区域限制测试"><a href="#流媒体平台及游戏区域限制测试" class="headerlink" title="流媒体平台及游戏区域限制测试"></a>流媒体平台及游戏区域限制测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">---------------------流媒体解锁--感谢sjlleo开源-------------------------</span><br><span class="line"></span><br><span class="line">以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用</span><br><span class="line"></span><br><span class="line">----------------Youtube----------------</span><br><span class="line"></span><br><span class="line">[IPv4]</span><br><span class="line"></span><br><span class="line">连接方式: Youtube Video Server</span><br><span class="line"></span><br><span class="line">视频缓存节点地域: NUQ(NUQ04S38)</span><br><span class="line"></span><br><span class="line">Youtube识别地域: 无信息(null)</span><br><span class="line"></span><br><span class="line">----------------Netflix----------------</span><br><span class="line"></span><br><span class="line">[IPv4]</span><br><span class="line"></span><br><span class="line">您的出口IP可以使用Netflix，但仅可看Netflix自制剧</span><br><span class="line"></span><br><span class="line">NF所识别的IP地域信息：美国</span><br><span class="line"></span><br><span class="line">[IPv6]</span><br><span class="line"></span><br><span class="line">您的网络可能没有正常配置IPv6，或者没有IPv6网络接入</span><br><span class="line"></span><br><span class="line">---------------DisneyPlus---------------</span><br><span class="line"></span><br><span class="line">解锁Youtube，Netflix，DisneyPlus上面和下面进行比较，不同之处自行判断</span><br><span class="line"></span><br><span class="line">----------------流媒体解锁--感谢RegionRestrictionCheck开源--------------</span><br><span class="line"></span><br><span class="line"> 以下为IPV4网络测试，若无IPV4网络则无输出</span><br><span class="line"></span><br><span class="line">============[ Multination ]============</span><br><span class="line"></span><br><span class="line"> Dazn:Yes (Region: US)</span><br><span class="line"></span><br><span class="line"> HotStar:Yes (Region: US)</span><br><span class="line"></span><br><span class="line"> Disney+:No</span><br><span class="line"></span><br><span class="line"> Netflix:Originals Only</span><br><span class="line"></span><br><span class="line"> YouTube Premium:Yes</span><br><span class="line"></span><br><span class="line"> Amazon Prime Video:Yes (Region: US)</span><br><span class="line"></span><br><span class="line"> TVBAnywhere+:Yes</span><br><span class="line"></span><br><span class="line"> iQyi Oversea Region:US</span><br><span class="line"></span><br><span class="line"> Viu.com:No</span><br><span class="line"></span><br><span class="line"> YouTube CDN:Mountain View</span><br><span class="line"></span><br><span class="line"> Netflix Preferred CDN:Associated with [] in [San Jose, CA ]</span><br><span class="line"></span><br><span class="line"> Spotify Registration:No</span><br><span class="line"></span><br><span class="line"> Steam Currency:USD</span><br><span class="line"></span><br><span class="line"> ChatGPT:Failed</span><br><span class="line"></span><br><span class="line"> Bing Region:US</span><br><span class="line"></span><br><span class="line">=======================================</span><br><span class="line"></span><br><span class="line"> 以下为IPV6网络测试，若无IPV6网络则无输出</span><br><span class="line"></span><br><span class="line">---------------TikTok解锁--感谢lmc999的源脚本及fscarmen PR--------------</span><br><span class="line"></span><br><span class="line"> Tiktok Region:【US】</span><br></pre></td></tr></table></figure><p>也是一样的情况，奈飞只支持自制剧，ChatGPT啥的解锁都支持</p><h3 id="欺诈分数以及IP质量检测"><a href="#欺诈分数以及IP质量检测" class="headerlink" title="欺诈分数以及IP质量检测"></a>欺诈分数以及IP质量检测</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">-------------------欺诈分数以及IP质量检测--本脚本原创-------------------</span><br><span class="line"></span><br><span class="line">数据仅作参考，不代表100%准确，如果和实际情况不一致请手动查询多个数据库比对</span><br><span class="line"></span><br><span class="line">以下为各数据库编号，输出结果后将自带数据库来源对应的编号</span><br><span class="line"></span><br><span class="line">ipinfo数据库 ①  | scamalytics数据库 ②  | virustotal数据库 ③  | abuseipdb数据库 ④  | ip2location数据库   ⑤</span><br><span class="line"></span><br><span class="line">ip-api数据库 ⑥  | ipwhois数据库     ⑦  | ipregistry数据库 ⑧  | ipdata数据库    ⑨  | ipgeolocation数据库 ⑩</span><br><span class="line"></span><br><span class="line">欺诈分数(越低越好): 0②</span><br><span class="line"></span><br><span class="line">abuse得分(越低越好): 0④</span><br><span class="line"></span><br><span class="line">IP类型: </span><br><span class="line"></span><br><span class="line">  使用类型(usage_type):hosting①  Data Center/Web Hosting/Transit⑤  hosting⑧  </span><br><span class="line"></span><br><span class="line">  公司类型(company_type):hosting①  hosting⑧  </span><br><span class="line"></span><br><span class="line">  云服务提供商(cloud_provider):  Yes⑧ </span><br><span class="line"></span><br><span class="line">  代理(proxy):  No① ② ⑦ ⑧ </span><br><span class="line"></span><br><span class="line">  VPN(vpn):  No① ② ⑦ ⑧ </span><br><span class="line"></span><br><span class="line">  TOR(tor):  No① ② ⑦ ⑧ </span><br><span class="line"></span><br><span class="line">  TOR出口(tor_exit):  No⑧ </span><br><span class="line"></span><br><span class="line">  搜索引擎机器人(search_engine_robot):② </span><br><span class="line"></span><br><span class="line">  匿名代理(anonymous):  No⑦ ⑧ </span><br><span class="line"></span><br><span class="line">  攻击方(attacker):  No⑧ </span><br><span class="line"></span><br><span class="line">  滥用者(abuser):  No⑧ </span><br><span class="line"></span><br><span class="line">  威胁(threat):  No⑧ </span><br><span class="line"></span><br><span class="line">  iCloud中继(icloud_relay):  No① ⑧ </span><br><span class="line"></span><br><span class="line">  未分配IP(bogon):  No⑧ </span><br><span class="line"></span><br><span class="line">黑名单记录统计(有多少个黑名单网站有记录): 无害0 恶意0 可疑0 未检测89 ③</span><br><span class="line"></span><br><span class="line">Google搜索可行性：YES</span><br><span class="line"></span><br><span class="line">端口25检测:</span><br><span class="line"></span><br><span class="line">  本地: No</span><br><span class="line"></span><br><span class="line">  163邮箱: Yes</span><br><span class="line"></span><br><span class="line">  gmail邮箱：No</span><br></pre></td></tr></table></figure><p>IP很干净，欺诈分数为0，而相反我测DMIT或者瓦工的时候，都有十几二十分，甚至有些时候分到的IP更高。</p><h3 id="三网回程及速度"><a href="#三网回程及速度" class="headerlink" title="三网回程及速度"></a>三网回程及速度</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">----------------三网回程--感谢zhanghanyun/backtrace开源-----------------</span><br><span class="line"></span><br><span class="line">国家: US 城市: San Jose 服务商: AS41378 Kirino LLC</span><br><span class="line"></span><br><span class="line">北京电信 219.141.136.12  电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">北京联通 202.106.50.1    电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">北京移动 221.179.155.161 电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">上海电信 202.96.209.133  电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">上海联通 210.22.97.1     电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">上海移动 211.136.112.200 电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">广州电信 58.60.188.222   电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">广州联通 210.21.196.6    电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">广州移动 120.196.165.24  电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">成都电信 61.139.2.69     电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">成都联通 119.6.6.6       电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">成都移动 211.137.96.205  电信CN2 [优质线路]           </span><br><span class="line"></span><br><span class="line">---------------------回程路由--感谢fscarmen开源及PR---------------------</span><br><span class="line"></span><br><span class="line">依次测试电信/联通/移动经过的地区及线路，核心程序来自ipip.net或nexttrace，请知悉!</span><br><span class="line"></span><br><span class="line">广州电信 58.60.188.222</span><br><span class="line"></span><br><span class="line">13.41 ms  AS41378,AS51089  美国, 加利福尼亚州, 圣何塞, parsun.com</span><br><span class="line"></span><br><span class="line">132.64 ms  *  中国, 上海, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">132.20 ms  *  中国, 上海, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">132.70 ms  *  中国, 上海, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">157.49 ms  *  中国, 广东, 广州, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">159.60 ms  *  中国, 广东, 深圳, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">163.51 ms  AS4134  中国, 广东, 深圳, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">156.93 ms  AS4134  中国, 广东, 深圳, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">广州联通 210.21.196.6</span><br><span class="line"></span><br><span class="line">17.85 ms  AS41378,AS51089  美国, 加利福尼亚州, 圣何塞, parsun.com</span><br><span class="line"></span><br><span class="line">129.78 ms  *  中国, 上海, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">130.79 ms  *  中国, 上海, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">136.37 ms  *  中国, 上海, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">153.00 ms  *  中国, 广东, 广州, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">159.14 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">163.90 ms  AS17816  中国, 广东, 深圳, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">167.66 ms  AS17623  中国, 广东, 深圳, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">164.67 ms  AS17623  中国, 广东, 深圳, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">广州移动 120.196.165.24</span><br><span class="line"></span><br><span class="line">16.75 ms  AS41378,AS51089  美国, 加利福尼亚州, 圣何塞, parsun.com</span><br><span class="line"></span><br><span class="line">129.66 ms  *  中国, 上海, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">159.04 ms  AS9808  中国, 广东, 广州, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">165.21 ms  AS9808  中国, 广东, 广州, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">171.26 ms  AS9808  中国, 广东, 广州, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">167.90 ms  AS56040  中国, 广东, 深圳, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">--------------------自动更新测速节点列表--本脚本原创--------------------</span><br><span class="line"></span><br><span class="line">位置 上传速度 下载速度 延迟</span><br><span class="line"></span><br><span class="line">Speedtest.net 348.62Mbps 200.72Mbps 976.23ms</span><br><span class="line"></span><br><span class="line">洛杉矶 375.19Mbps 169.05Mbps 1.50ms</span><br><span class="line"></span><br><span class="line">日本东京 150.32Mbps 68.14Mbps 2.53ms</span><br><span class="line"></span><br><span class="line">联通WuXi 335.03Mbps 259.44Mbps 974.79ms</span><br><span class="line"></span><br><span class="line">联通上海5G 357.42Mbps 209.60Mbps 947.07ms</span><br><span class="line"></span><br><span class="line">电信合肥5G 379.01Mbps 197.75Mbps 1.10ms</span><br><span class="line"></span><br><span class="line">电信浙江 339.03Mbps 193.04Mbps 1.04ms</span><br><span class="line"></span><br><span class="line">移动Zhengzhou5G 381.41Mbps 285.66Mbps 987.62ms</span><br><span class="line"></span><br><span class="line">移动杭州5G 381.41Mbps 260.44Mbps 1.03ms</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>速度这块基本上能够跑满吧，CN2 GIA线路就是这样，贵但是稳，高峰期什么的都不会有什么大的变化。</p><p>我写这个目的主要是介绍这款机器的情况，同时因为我手上现在的 VPS 数量比较多，现在有这款机器出售</p><p>购于 2023 年11-10，目前按照剩余价值出售，大概是 57刀的样子（具体看交易时间），这家其实转让（push）的话会有 3 刀的一个手续费，如果比较熟悉的可以商量。有兴趣的可以通过 telegram 联系我，id：@GetMyCats</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在前面写过&lt;a href=&quot;(https://portal.saltyfish.io/index.php)&quot;&gt;saltfish（咸鱼）&lt;/a&gt;的美国San Jose地区9929线路的简评，我手里有它家的同地区的CN2 GIA线路的mini款，也简单的做一下评测。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="vps教程" scheme="https://mylucky.cyou/categories/vps%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vps简评" scheme="https://mylucky.cyou/tags/vps%E7%AE%80%E8%AF%84/"/>
    
    <category term="vps" scheme="https://mylucky.cyou/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>Saltfish(咸鱼)美国SanJose 9929 mini VPS简评</title>
    <link href="https://mylucky.cyou/post/20231218105520.html"/>
    <id>https://mylucky.cyou/post/20231218105520.html</id>
    <published>2023-12-18T02:55:20.000Z</published>
    <updated>2023-12-19T08:55:21.026Z</updated>
    
    <content type="html"><![CDATA[<p>算起来也算是去年下半年才开始接触VPS，以前总觉得这东西很复杂（虽然确实是），对我这种毫无基础的人不友好，从去年开始试着弄AWS的lightsail开始，到现在一年多的时间，虽然还是处于瞎折腾的程度，但是也算是有一点点的收获。</p><p><a href="https://portal.saltyfish.io/index.php">咸鱼</a>在玩机界也算是有一定的口碑，目前运营了有5年，算是有一定年头了，主要以Seattle、SanJose、Frankfurt、Amsterdam、Hongkong地区为主，线路主要是9929、CN2GIA、4837等，总的来说还是挺不错的，价格也算是比较高的那种。</p><p>这款VPS的套餐是San Jose VPS - Elite Network，配置为mini，配置代码是sjc.e1.mini，大陆优化线路9929</p><p>saltfish家的Elite是9929线路，Premium是CN2 GIA线路。</p><h2 id="套餐"><a href="#套餐" class="headerlink" title="套餐"></a>套餐</h2><table><thead><tr><th align="center">处理器</th><th align="center">内存</th><th align="center">硬盘</th><th align="center">流量</th><th align="center">带宽</th><th align="center">价格</th><th align="center">链接</th></tr></thead><tbody><tr><td align="center">1x</td><td align="center">1GB</td><td align="center">10GB SSD</td><td align="center">1.2TB&#x2F;月</td><td align="center">500M</td><td align="center">$6.5&#x2F;月</td><td align="center"><a href="https://portal.saltyfish.io/store/sjc-elite">点击前往</a></td></tr></tbody></table><p>配置不算高，说白了就是搭建代理用的，9929线路的带宽都不会很高，这款也只有500M，只能说够用，正价是$6.5&#x2F;月，年付71.5，而我买的这款是活动价，正价的8折，算下来就是57.2美元&#x2F;年，循环出账，也就是一直是这个价格。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>采用的是这个一键脚本，用的顺序测试</p><p><code>curl -L https://gitlab.com/spiritysdx/za/-/raw/main/ecs.sh -o ecs.sh &amp;&amp; chmod +x ecs.sh &amp;&amp; bash ecs.sh</code></p><h3 id="性能基准测试"><a href="#性能基准测试" class="headerlink" title="性能基准测试"></a>性能基准测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">---------------------基础信息查询--感谢所有开源项目---------------------</span><br><span class="line"></span><br><span class="line"> CPU 型号          : Intel Core Processor (Broadwell, IBRS)</span><br><span class="line"></span><br><span class="line"> CPU 核心数        : 1</span><br><span class="line"></span><br><span class="line"> CPU 频率          : 2596.964 MHz</span><br><span class="line"></span><br><span class="line"> CPU 缓存          : L1: 32.00 KB / L2: 4.00 MB / L3: 16.00 MB</span><br><span class="line"></span><br><span class="line"> 硬盘空间          : 5.95 GiB / 9.33 GiB</span><br><span class="line"></span><br><span class="line"> 启动盘路径        : /dev/vda2</span><br><span class="line"></span><br><span class="line"> 内存              : 285.45 MiB / 957.87 MiB</span><br><span class="line"></span><br><span class="line"> Swap              : [ no swap partition or swap file detected ]</span><br><span class="line"></span><br><span class="line"> 系统在线时间      : 48 days, 11 hour 39 min</span><br><span class="line"></span><br><span class="line"> 负载              : 0.30, 0.08, 0.02</span><br><span class="line"></span><br><span class="line"> 系统              : Debian GNU/Linux 12 (bookworm) (x86_64)</span><br><span class="line"></span><br><span class="line"> AES-NI指令集      : ✔ Enabled</span><br><span class="line"></span><br><span class="line"> VM-x/AMD-V支持    : ❌ Disabled</span><br><span class="line"></span><br><span class="line"> 架构              : x86_64 (64 Bit)</span><br><span class="line"></span><br><span class="line"> 内核              : 6.5.9-x64v3-xanmod1</span><br><span class="line"></span><br><span class="line"> TCP加速方式       : bbr</span><br><span class="line"></span><br><span class="line"> 虚拟化架构        : KVM</span><br><span class="line"></span><br><span class="line"> NAT类型           : 开放型</span><br><span class="line"></span><br><span class="line"> IPV4 ASN          : AS51089 Sakura Network LTD</span><br><span class="line"></span><br><span class="line"> IPV4 位置         : San Jose / California</span><br><span class="line"></span><br><span class="line">---------------------CPU测试--感谢lemonbench开源------------------------</span><br><span class="line"></span><br><span class="line"> -&gt; CPU 测试中 (Fast Mode, 1-Pass @ 5sec)</span><br><span class="line"></span><br><span class="line"> 1 线程测试(1核)得分: 970 Scores</span><br><span class="line"></span><br><span class="line">---------------------内存测试--感谢lemonbench开源-----------------------</span><br><span class="line"></span><br><span class="line"> -&gt; 内存测试 Test (Fast Mode, 1-Pass @ 5sec)</span><br><span class="line"></span><br><span class="line"> 单线程读测试:19689.84 MB/s</span><br><span class="line"></span><br><span class="line"> 单线程写测试:14259.62 MB/s</span><br><span class="line"></span><br><span class="line">------------------磁盘dd读写测试--感谢lemonbench开源--------------------</span><br><span class="line"></span><br><span class="line"> -&gt; 磁盘IO测试中 (4K Block/1M Block, Direct Mode)</span><br><span class="line"></span><br><span class="line"> 测试操作写速度读速度</span><br><span class="line"></span><br><span class="line"> 100MB-4K Block38.8 MB/s (9481 IOPS, 2.70s)47.0 MB/s (11467 IOPS, 2.23s)</span><br><span class="line"></span><br><span class="line"> 1GB-1M Block390 MB/s (372 IOPS, 2.69s)1.2 GB/s (1140 IOPS, 0.88s)</span><br><span class="line"></span><br><span class="line">---------------------磁盘fio读写测试--感谢yabs开源----------------------</span><br><span class="line"></span><br><span class="line">Block Size | 4k            (IOPS) | 64k           (IOPS)</span><br><span class="line"></span><br><span class="line">  ------   | ---            ----  | ----           ---- </span><br><span class="line"></span><br><span class="line">Read       | 44.05 MB/s   (11.0k) | 536.18 MB/s   (8.3k)</span><br><span class="line"></span><br><span class="line">Write      | 44.13 MB/s   (11.0k) | 539.00 MB/s   (8.4k)</span><br><span class="line"></span><br><span class="line">Total      | 88.18 MB/s   (22.0k) | 1.07 GB/s    (16.7k)           |                      |                     </span><br><span class="line"></span><br><span class="line">Block Size | 512k          (IOPS) | 1m            (IOPS)</span><br><span class="line"></span><br><span class="line">  ------   | ---            ----  | ----           ---- </span><br><span class="line"></span><br><span class="line">Read       | 524.48 MB/s   (1.0k) | 520.93 MB/s    (508)</span><br><span class="line"></span><br><span class="line">Write      | 552.35 MB/s   (1.0k) | 555.63 MB/s    (542)</span><br><span class="line"></span><br><span class="line">Total      | 1.07 GB/s     (2.1k) | 1.07 GB/s     (1.0k)</span><br></pre></td></tr></table></figure><h3 id="流媒体平台及游戏区域限制测试"><a href="#流媒体平台及游戏区域限制测试" class="headerlink" title="流媒体平台及游戏区域限制测试"></a>流媒体平台及游戏区域限制测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">---------------------流媒体解锁--感谢sjlleo开源-------------------------</span><br><span class="line"></span><br><span class="line">以下测试的解锁地区是准确的，但是不是完整解锁的判断可能有误，这方面仅作参考使用</span><br><span class="line"></span><br><span class="line">----------------Youtube----------------</span><br><span class="line"></span><br><span class="line">[IPv4]</span><br><span class="line"></span><br><span class="line">连接方式: Youtube Video Server</span><br><span class="line"></span><br><span class="line">视频缓存节点地域: NUQ(NUQ04S38)</span><br><span class="line"></span><br><span class="line">Youtube识别地域: 无信息(null)</span><br><span class="line"></span><br><span class="line">----------------Netflix----------------</span><br><span class="line"></span><br><span class="line">[IPv4]</span><br><span class="line"></span><br><span class="line">您的出口IP可以使用Netflix，但仅可看Netflix自制剧</span><br><span class="line"></span><br><span class="line">NF所识别的IP地域信息：美国</span><br><span class="line"></span><br><span class="line">[IPv6]</span><br><span class="line"></span><br><span class="line">您的网络可能没有正常配置IPv6，或者没有IPv6网络接入</span><br><span class="line"></span><br><span class="line">---------------DisneyPlus---------------</span><br><span class="line"></span><br><span class="line">[IPv4]</span><br><span class="line"></span><br><span class="line">当前IPv4出口解锁DisneyPlus</span><br><span class="line"></span><br><span class="line">区域：美国区</span><br><span class="line"></span><br><span class="line">解锁Youtube，Netflix，DisneyPlus上面和下面进行比较，不同之处自行判断</span><br><span class="line"></span><br><span class="line">----------------流媒体解锁--感谢RegionRestrictionCheck开源--------------</span><br><span class="line"></span><br><span class="line"> 以下为IPV4网络测试，若无IPV4网络则无输出</span><br><span class="line"></span><br><span class="line">============[ Multination ]============</span><br><span class="line"></span><br><span class="line"> Dazn:Yes (Region: US)</span><br><span class="line"></span><br><span class="line"> HotStar:Yes (Region: US)</span><br><span class="line"></span><br><span class="line"> Disney+:No</span><br><span class="line"></span><br><span class="line"> Netflix:Originals Only</span><br><span class="line"></span><br><span class="line"> YouTube Premium:Yes</span><br><span class="line"></span><br><span class="line"> Amazon Prime Video:Yes (Region: US)</span><br><span class="line"></span><br><span class="line"> TVBAnywhere+:Yes</span><br><span class="line"></span><br><span class="line"> iQyi Oversea Region:US</span><br><span class="line"></span><br><span class="line"> Viu.com:No</span><br><span class="line"></span><br><span class="line"> YouTube CDN:Mountain View</span><br><span class="line"></span><br><span class="line"> Netflix Preferred CDN:Associated with [] in [Los Angeles, CA ]</span><br><span class="line"></span><br><span class="line"> Spotify Registration:No</span><br><span class="line"></span><br><span class="line"> Steam Currency:USD</span><br><span class="line"></span><br><span class="line"> ChatGPT:Yes</span><br><span class="line"></span><br><span class="line"> Bing Region:US</span><br><span class="line"></span><br><span class="line">=======================================</span><br><span class="line"></span><br><span class="line"> 以下为IPV6网络测试，若无IPV6网络则无输出</span><br><span class="line"></span><br><span class="line">---------------TikTok解锁--感谢lmc999的源脚本及fscarmen PR--------------</span><br><span class="line"></span><br><span class="line"> Tiktok Region:【US】</span><br></pre></td></tr></table></figure><p>解锁情况还是可以的，我平常使用的ChatGPT都是走它这个线路。</p><h3 id="欺诈分数以及IP质量检测"><a href="#欺诈分数以及IP质量检测" class="headerlink" title="欺诈分数以及IP质量检测"></a>欺诈分数以及IP质量检测</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">数据仅作参考，不代表100%准确，如果和实际情况不一致请手动查询多个数据库比对</span><br><span class="line"></span><br><span class="line">以下为各数据库编号，输出结果后将自带数据库来源对应的编号</span><br><span class="line"></span><br><span class="line">ipinfo数据库 ①  | scamalytics数据库 ②  | virustotal数据库 ③  | abuseipdb数据库 ④  | ip2location数据库   ⑤</span><br><span class="line"></span><br><span class="line">ip-api数据库 ⑥  | ipwhois数据库     ⑦  | ipregistry数据库 ⑧  | ipdata数据库    ⑨  | ipgeolocation数据库 ⑩</span><br><span class="line"></span><br><span class="line">欺诈分数(越低越好): 0②</span><br><span class="line"></span><br><span class="line">abuse得分(越低越好): 0④</span><br><span class="line"></span><br><span class="line">IP类型: </span><br><span class="line"></span><br><span class="line">  使用类型(usage_type):hosting①  Data Center/Web Hosting/Transit⑤  hosting⑧  business⑨  </span><br><span class="line"></span><br><span class="line">  公司类型(company_type):hosting①  hosting⑧  </span><br><span class="line"></span><br><span class="line">  云服务提供商(cloud_provider):  Yes⑧ </span><br><span class="line"></span><br><span class="line">  数据中心(datacenter):  No⑥ ⑨ </span><br><span class="line"></span><br><span class="line">  移动网络(mobile):  No⑥ </span><br><span class="line"></span><br><span class="line">  代理(proxy):  No① ② ⑥ ⑦ ⑧ ⑨ ⑩ </span><br><span class="line"></span><br><span class="line">  VPN(vpn):  No① ② ⑦ ⑧ </span><br><span class="line"></span><br><span class="line">  TOR(tor):  No① ② ⑦ ⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  TOR出口(tor_exit):  No⑧ </span><br><span class="line"></span><br><span class="line">  搜索引擎机器人(search_engine_robot):② </span><br><span class="line"></span><br><span class="line">  匿名代理(anonymous):  No⑦ ⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  攻击方(attacker):  No⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  滥用者(abuser):  No⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  威胁(threat):  No⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  iCloud中继(icloud_relay):  No① ⑧ ⑨ </span><br><span class="line"></span><br><span class="line">  未分配IP(bogon):  No⑧ ⑨ </span><br><span class="line"></span><br><span class="line">Google搜索可行性：YES</span><br><span class="line"></span><br><span class="line">端口25检测:</span><br><span class="line"></span><br><span class="line">  本地: No</span><br><span class="line"></span><br><span class="line">  163邮箱：No</span><br></pre></td></tr></table></figure><p>看起来IP还是比较干净的</p><h3 id="三网回程及速度"><a href="#三网回程及速度" class="headerlink" title="三网回程及速度"></a>三网回程及速度</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">----------------三网回程--感谢zhanghanyun/backtrace开源-----------------</span><br><span class="line"></span><br><span class="line">国家: US 城市: San Jose 服务商: AS41378 Kirino LLC</span><br><span class="line"></span><br><span class="line">北京电信 219.141.136.12  测试超时</span><br><span class="line"></span><br><span class="line">北京联通 202.106.50.1    联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">北京移动 221.179.155.161 联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">上海电信 202.96.209.133  联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">上海联通 210.22.97.1     联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">上海移动 211.136.112.200 联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">广州电信 58.60.188.222   联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">广州联通 210.21.196.6    联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">广州移动 120.196.165.24  联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">成都电信 61.139.2.69     联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">成都联通 119.6.6.6       联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">成都移动 211.137.96.205  联通9929[优质线路]           </span><br><span class="line"></span><br><span class="line">---------------------回程路由--感谢fscarmen开源及PR---------------------</span><br><span class="line"></span><br><span class="line">依次测试电信/联通/移动经过的地区及线路，核心程序来自ipip.net或nexttrace，请知悉!</span><br><span class="line"></span><br><span class="line">广州电信 58.60.188.222</span><br><span class="line"></span><br><span class="line">0.80 ms  AS41378,AS51089  美国, 加利福尼亚州, 圣何塞, parsun.com</span><br><span class="line"></span><br><span class="line">1.65 ms  AS10099  美国, 加利福尼亚州, 圣何塞, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">137.12 ms  AS10099  中国, 上海, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">163.11 ms  AS9929  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">166.89 ms  *  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">165.04 ms  AS4134  中国, 广东, 深圳, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">161.85 ms  AS4134  中国, 广东, 深圳, chinatelecom.com.cn, 电信</span><br><span class="line"></span><br><span class="line">广州联通 210.21.196.6</span><br><span class="line"></span><br><span class="line">0.89 ms  AS41378,AS51089  美国, 加利福尼亚州, 圣何塞, parsun.com</span><br><span class="line"></span><br><span class="line">1.70 ms  AS10099  美国, 加利福尼亚州, 圣何塞, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">135.59 ms  AS10099  中国, 上海, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">137.00 ms  AS9929  中国, 上海, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">162.36 ms  AS9929  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">166.35 ms  *  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">162.98 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">163.64 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">167.31 ms  AS17816  中国, 广东, 深圳, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">169.34 ms  AS17623  中国, 广东, 深圳, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">168.12 ms  AS17623  中国, 广东, 深圳, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">广州移动 120.196.165.24</span><br><span class="line"></span><br><span class="line">0.82 ms  AS41378,AS51089  美国, 加利福尼亚州, 圣何塞, parsun.com</span><br><span class="line"></span><br><span class="line">2.30 ms  AS10099  美国, 加利福尼亚州, 圣何塞, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">137.50 ms  AS10099  中国, 上海, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">139.98 ms  AS9929  中国, 上海, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">162.71 ms  AS9929  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">164.68 ms  *  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">165.42 ms  AS4837  中国, 广东, 广州, chinaunicom.com, 联通</span><br><span class="line"></span><br><span class="line">163.07 ms  AS9808  中国, 广东, 广州, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">165.32 ms  AS9808  中国, 广东, 广州, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">178.35 ms  AS9808  中国, 广东, 广州, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">176.30 ms  AS56040  中国, 广东, 深圳, chinamobile.com, 移动</span><br><span class="line"></span><br><span class="line">--------------------自动更新测速节点列表--本脚本原创--------------------</span><br><span class="line"></span><br><span class="line">位置 上传速度 下载速度 延迟  丢包率</span><br><span class="line"></span><br><span class="line">Speedtest.net 586.89 Mbps 556.31 Mbps 0.91  0.0%</span><br><span class="line"></span><br><span class="line">洛杉矶 589.24 Mbps 547.97 Mbps 15.83  NULL</span><br><span class="line"></span><br><span class="line">日本东京 617.83 Mbps 573.01 Mbps 110.06  NULL</span><br><span class="line"></span><br><span class="line">联通WuXi 381.68 Mbps 565.16 Mbps 142.34  0.0%</span><br><span class="line"></span><br><span class="line">联通上海5G 168.61 Mbps 14.43 Mbps 137.39  0.0%</span><br><span class="line"></span><br><span class="line">电信Suzhou5G 497.52 Mbps 564.75 Mbps 157.29  NULL</span><br><span class="line"></span><br><span class="line">移动Chengdu 440.07 Mbps 386.29 Mbps 200.40  0.0%</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>线路很直，而且500M基本能够跑满，但是让我有点意外的是，测速点电信和移动的两个点都能跑出好的速度，相反同为联通的上海5G结果速度有点拉胯 🤣</p><p>我写这个目的主要是介绍这款机器的情况，同时因为我手上现在的VPS数量比较多，现在有这款机器出售</p><p>购于2023年9-21，目前按照剩余价值出售，大概是46刀的样子，这家其实转让（push）的话会有3刀的一个手续费，如果比较熟悉的可以商量。有兴趣的可以通过telegram联系我，id：@GetMyCats</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;算起来也算是去年下半年才开始接触VPS，以前总觉得这东西很复杂（虽然确实是），对我这种毫无基础的人不友好，从去年开始试着弄AWS的lightsail开始，到现在一年多的时间，虽然还是处于瞎折腾的程度，但是也算是有一点点的收获。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https:/</summary>
      
    
    
    
    <category term="vps教程" scheme="https://mylucky.cyou/categories/vps%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vps简评" scheme="https://mylucky.cyou/tags/vps%E7%AE%80%E8%AF%84/"/>
    
    <category term="vps" scheme="https://mylucky.cyou/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>你真的需要hexo吗？</title>
    <link href="https://mylucky.cyou/post/20231218094358.html"/>
    <id>https://mylucky.cyou/post/20231218094358.html</id>
    <published>2023-12-18T01:43:58.000Z</published>
    <updated>2023-12-19T08:53:14.065Z</updated>
    
    <content type="html"><![CDATA[<p>经过几天的体验，个人认为这只是个适用于开发者群体的博客框架，特别是如果你只想好好写文章更是没有任何理由浪费时间在这玩意上面</p><p>举个例子： Hexo 是没有后台管理系统，那么要如何新建一篇文章呢？答案是使用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;hi-hexo&quot;</span></span><br></pre></td></tr></table></figure><p>然后 Hexo 会在项目根目录的 <code>source</code> 目录下的 <code>_posts</code> 目录里生成 <code>hi-hexo.md</code> 文件，修改它就是修改新文章的内容了，那么删除一个文章呢？答案是删除掉这个 Markdown 文件</p><p>Hexo 的基本使用流程是：</p><ol><li>在本地计算机使用命令 (<code>hexo new &lt;文章名&gt;</code>) 生成相应文件，然后使用编辑器在这个文件里写文章；</li><li>在本地计算机使用命令 (<code>hexo server</code>) 运行一个本地 Web 服务器在本地上浏览器打开进行预览，如果修改了主题及站点配置还需要使用命令 (<code>hexo clean</code>) 清除一下缓存，当主题及站点配置稳定不再变更而你又熟悉使用 Markdown 写作后，完全可以忽略这步；</li><li>当觉得可以发布了，在本地计算机使用命令 (<code>hexo generate</code>) 生成静态文件然后部署到远程服务器；</li><li>当然还可以更方便一点，在本地计算机使用命令 (<code>hexo deploy</code> 再配合 <code>-g</code> 选项就可以省略上一步) 从而配合远程部署插件，自动部署静态文件到远程服务器上；</li></ol><p>这套流程对于曾经或正在使用如 WordPress 或 Medium 这样成熟的博客系统的人就已经很窒息了，但别急这还没完…</p><p>体验 Hexo 的过程让我想起几年前曾经体验过的另一款基于 Node.js 的博客平台 Ghost (Ghost 还将自身对标 WordPress 和 Medium)，<strong>当时</strong>上手后发现：没有搜索、没有分类、没有二级导航，甚至官方主题的本地化都懒得做还把后台不支持本地化的说明从文档中删除，当你去看 Ghost 的 Github 你会发现这玩意居然是周更，那年是 2018 年距离 Ghost 在 2013 年发布已经过去 5 年了，都不知道这 5 年内 Ghost 周更更出了个什么，连基础功能都做不好居然还对标 WordPress</p><p>Hexo 的体验类似，搜索、评论等功能都需要额外安装插件来实现。就比如评论功能，Hexo 是没有后端的，但为了评论功能以评论插件之一的 waline 举例，waline 官方文档的快速上手中推荐使用 LeanCloud 作为数据库以及使用 Vercel 部署为服务端…</p><blockquote><p>注意，这里并不是说 waline 不好，waline 是一种外挂形式的插件 (不仅用于 Hexo)，不弄个后端评论数据又怎么妥善处理呢？</p></blockquote><p>但这就是很滑稽的地方，一个没有后端的博客框架为了一个功能搞出两个后端，更不用说如果使用的是适配较好的主题还只是改改主题的配置文件，否则还需要自己去改相关代码。这已经超出非开发者的能力范围了</p><blockquote><p>除此之外就是还有人看中这类框架是可以将页面托管在 Github 节省了部署成本而使用它，但这年头海外的廉价 VPS 简直遍地都是，不过也不能要求所有人都在这件事情上投入资金</p></blockquote><p>另外还想说的是一个很普遍的现象：一个开发者想通过博客来记录自己的工作和学习，然而搞着搞着文章没写几篇，但出于对博客或博客插件的不满意自己动手实现，乃至重构了一遍又一遍…当然个人并不觉得这种将自己所学用于实践有什么不好，<strong>但重点在于你到底是来干嘛的呢？是来写博客还是来造博客的？</strong></p><p>看到这里，你应该对于 Hexo 有一个基本的预期了，那么还想要使用 Hexo 吗？</p><blockquote><p>本文摘抄自花姐的Blog ：<a href="https://divineengine.net/article/hexo-quickstart-guide/">《Hexo快速入门》</a>中的片段。</p><p>转摘过来的目的也是这段文字说出了个人的一些感想吧。</p><p>这几天我一直在折腾hexo，从安装到主题，到各种设置，最后发现时间是都耗费在这些东西上面了。</p><p>如同我说群里的小伙伴：hexo安装一天，折腾nginx的ssl配置啥的一天，再折腾插件主题什么的一周到一个月，文章没几篇。</p><p>那么我们搭建blog的目的是什么？只是为了折腾？就跟上面说的，写blog还是造blog？</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;经过几天的体验，个人认为这只是个适用于开发者群体的博客框架，特别是如果你只想好好写文章更是没有任何理由浪费时间在这玩意上面&lt;/p&gt;
&lt;p&gt;举个例子： Hexo 是没有后台管理系统，那么要如何新建一篇文章呢？答案是使用命令：&lt;/p&gt;
&lt;figure class=&quot;highli</summary>
      
    
    
    
    <category term="hexo教程" scheme="https://mylucky.cyou/categories/hexo%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="https://mylucky.cyou/tags/hexo/"/>
    
    <category term="blog" scheme="https://mylucky.cyou/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>hexo常用命令</title>
    <link href="https://mylucky.cyou/post/20231216124851.html"/>
    <id>https://mylucky.cyou/post/20231216124851.html</id>
    <published>2023-12-16T04:48:51.000Z</published>
    <updated>2023-12-19T08:55:00.352Z</updated>
    
    <content type="html"><![CDATA[<p>本文大部分内容来自于Hexo的官方网站，自己摘录下来一些经常使用的Hexo指令。</p><h1 id="写作："><a href="#写作：" class="headerlink" title="写作："></a>写作：</h1><p><code>hexo new [layout] &lt;title&gt;</code></p><p>命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局</p><h2 id="布局-layout"><a href="#布局-layout" class="headerlink" title="布局(layout)"></a>布局(layout)</h2><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th align="left">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="left"><code>post</code></td><td align="left"><code>source/_posts</code></td></tr><tr><td align="left"><code>page</code></td><td align="left"><code>source</code></td></tr><tr><td align="left"><code>draft</code></td><td align="left"><code>source/_drafts</code></td></tr></tbody></table><p>所以一般我们开始写草稿的时候都是使用:</p><p><code>hexo new draft “新文章”</code></p><p>注意如果文章题目中包含空格，请用英文的“ ”将他们包括起来。生成的<code>新文章.md</code>在blog文件夹的<code>source/_drafts</code>里面，可以使用例如Typroa这样的md编辑软件来进行编写</p><h2 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h2><p>刚刚提到了 Hexo 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p><p><code>hexo publish [layout] &lt;title&gt;</code> </p><p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是在 <code>_config.yml</code> 中把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p><p>例如，上面的新文章草稿编写完成后，使用<code>hexo publish draft “新文章”</code> 来发布。</p><h1 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h1><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2013/7/13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>以下是预先定义的参数，可在模板中使用这些参数值并加以利用。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td><td align="left"><a href="https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0"><code>config.default_layout</code></a></td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td><td align="left">文章的文件名</td></tr><tr><td align="left"><code>date</code></td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left"><code>updated</code></td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left"><code>comments</code></td><td align="left">开启文章的评论功能</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>tags</code></td><td align="left">标签（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>categories</code></td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">覆盖文章的永久链接，永久链接应该以 <code>/</code> 或 <code>.html</code> 结尾</td><td align="left"><code>null</code></td></tr><tr><td align="left"><code>excerpt</code></td><td align="left">纯文本的页面摘要。使用 <a href="https://hexo.io/zh-cn/docs/tag-plugins#%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%92%8C%E6%88%AA%E6%96%AD">该插件</a> 来格式化文本</td><td align="left"></td></tr><tr><td align="left"><code>disableNunjucks</code></td><td align="left">启用时禁用 Nunjucks 标签 <code>&#123;&#123; &#125;&#125;</code>&#x2F;<code>&#123;% %&#125;</code> 和 <a href="https://hexo.io/zh-cn/docs/tag-plugins">标签插件</a> 的渲染功能</td><td align="left">false</td></tr><tr><td align="left"><code>lang</code></td><td align="left">设置语言以覆盖 <a href="https://hexo.io/zh-cn/docs/internationalization#%E8%B7%AF%E5%BE%84">自动检测</a></td><td align="left">继承自 <code>_config.yml</code></td></tr><tr><td align="left"><code>published</code></td><td align="left">文章是否发布</td><td align="left">对于 <code>_posts</code> 下的文章为 <code>true</code>，对于 <code>_draft</code> 下的文章为 <code>false</code></td></tr></tbody></table><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>根据 <code>_config.yml</code> 中 <a href="https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0"><code>default_layout</code></a> 的设置，默认布局是 <code>post</code> 。当文章中的布局被禁用(<code>layout: false</code>)，它将不会使用主题处理。然而，它仍然会被任何可用的渲染引擎渲染：如果一篇文章是用 Markdown 写的，并且安装了 Markdown 渲染引擎（比如默认的 <a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>)，它将被渲染成HTML。</p><p>除非通过 <code>disableNunjucks</code> 设置或 <a href="https://hexo.io/zh-cn/api/renderer#%E7%A6%81%E7%94%A8-Nunjucks-%E6%A0%87%E7%AD%BE">渲染引擎</a> 禁用，否则无论布局如何，<a href="https://hexo.io/zh-cn/docs/tag-plugins">标签插件</a> 总是被处理。</p><h2 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h2><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure><blockquote><p>分类方法的分歧</p><p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - Diary</span><br><span class="line">  - Life</span><br></pre></td></tr></table></figure><p>会使分类 <code>Life</code> 成为 <code>Diary</code> 的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p><p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- [Diary, PlayStation]</span><br><span class="line">- [Diary, Games]</span><br><span class="line">- [Life]</span><br></pre></td></tr></table></figure><p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p></blockquote><h1 id="标签插件（Tag-Plugins）"><a href="#标签插件（Tag-Plugins）" class="headerlink" title="标签插件（Tag Plugins）"></a>标签插件（Tag Plugins）</h1><h2 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h2><p>在文章中插入引言，可包含作者、来源和标题。</p><p><strong>别号：</strong> quote</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>在文章中插入代码。</p><p><strong>别名：</strong> code</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>以 <code>option:value</code> 的格式指定额外选项，例如：<code>line_number:false first_line:5</code>。</p><table><thead><tr><th align="left">额外选项</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>line_number</code></td><td align="left">显示行号</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>line_threshold</code></td><td align="left">只有代码块的行数超过该阈值，才显示行数</td><td align="left"><code>0</code></td></tr><tr><td align="left"><code>highlight</code></td><td align="left">启用代码高亮</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>first_line</code></td><td align="left">指定第一个行号</td><td align="left"><code>1</code></td></tr><tr><td align="left"><code>mark</code></td><td align="left">突出显示特定的行，每个值用逗号分隔。 使用破折号指定数字范围 例如： <code>mark:1,4-7,10</code> 将标记第1、4至7和10行</td><td align="left"></td></tr><tr><td align="left"><code>wrap</code></td><td align="left">用 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table">&#96;&#96;</a> 包裹代码块</td><td align="left"><code>true</code></td></tr></tbody></table><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p><strong>普通的代码块</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock %&#125;</span><br><span class="line">alert(&#x27;Hello World!&#x27;);</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br><span class="line">alert(&#x27;Hello World!&#x27;);</span><br></pre></td></tr></table></figure><p><strong>指定语言</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock lang:objc %&#125;</span><br><span class="line">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br><span class="line">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br></pre></td></tr></table></figure><p><strong>附加说明</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock Array.map %&#125;</span><br><span class="line">array.map(callback[, thisArg])</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br><span class="line">Array.maparray.map(callback[, thisArg])</span><br></pre></td></tr></table></figure><p><strong>附加说明和网址</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;</span><br><span class="line">_.compact([0, 1, false, 2, &#x27;&#x27;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br><span class="line">_.compactUnderscore.js_.compact([0, 1, false, 2, &#x27;&#x27;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure><h2 id="反引号代码块"><a href="#反引号代码块" class="headerlink" title="反引号代码块"></a>反引号代码块</h2><p>另一种形式的代码块，不同的是它使用三个反引号来包裹。</p><p>`&#96;&#96; [language] [title] [url] [link text] code snippet &#96;&#96;&#96;</p><blockquote><p>一般情况下，还是建议使用反引号的代码块，因为是md文档的标准格式。</p></blockquote><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p>在文章中插入指定大小的图片。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] &#x27;&quot;title text&quot; &quot;alt text&quot;&#x27; %&#125;</span><br></pre></td></tr></table></figure><h3 id="嵌入图片"><a href="#嵌入图片" class="headerlink" title="嵌入图片"></a>嵌入图片</h3><p><em>hexo-renderer-marked 3.1.0+ 可以（可选）自动解析图片的文章路径，参考 <a href="https://hexo.io/zh-cn/docs/asset-folders#%E4%BD%BF%E7%94%A8-Markdown-%E5%B5%8C%E5%85%A5%E5%9B%BE%E7%89%87">本节</a> 如何启用它。</em></p><p>“foo.jpg” 位于 <code>http://example.com/2020/01/02/hello/foo.jpg</code>。</p><p><strong>默认（无选项）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img foo.jpg %&#125;</span><br><span class="line">&lt;img src=&quot;/2020/01/02/hello/foo.jpg&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>自定义 class 属性</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img post-image foo.jpg %&#125;</span><br><span class="line">&lt;img src=&quot;/2020/01/02/hello/foo.jpg&quot; class=&quot;post-image&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>展示尺寸</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img foo.jpg 500 400 %&#125;</span><br><span class="line">&lt;img src=&quot;/2020/01/02/hello/foo.jpg&quot; width=&quot;500&quot; height=&quot;400&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong>title 和 alt 属性</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img logo.svg &quot;lorem ipsum&#x27;dolor&#x27;&quot; %&#125;</span><br><span class="line">&lt;img src=&quot;/2020/01/02/hello/foo.jpg&quot; title=&quot;lorem ipsum&quot; alt=&quot;dolor&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="文章摘要和截断"><a href="#文章摘要和截断" class="headerlink" title="文章摘要和截断"></a>文章摘要和截断</h2><p>在文章中使用 <code>&lt;!-- more --&gt;</code>，那么 <code>&lt;!-- more --&gt;</code> 之前的文字将会被视为摘要。首页中将只出现这部分文字，同时这部分文字也会出现在正文之中。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure><p>首页中将只会出现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br></pre></td></tr></table></figure><p>正文中则会出现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line"></span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure><p>注意，摘要可能会被 Front Matter 中的 <code>excerpt</code> 覆盖。</p><p>个人感觉这种方式是相当不美观的，好好的文章中间要插入一段代码进去。</p><h1 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h1><p>使用 Hexo 生成静态文件快速而且简单。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h3 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h3><p>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --watch</span><br></pre></td></tr></table></figure><h3 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h3><p>可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --deploy</span><br><span class="line">$ hexo deploy --generate</span><br></pre></td></tr></table></figure><blockquote><p>简写</p><p>上面两个命令可以简写为<br>$ hexo g -d<br>$ hexo d -g</p><p>熟悉了后可以一个命令：</p><p>Hexo g &amp;&amp; hexo d</p></blockquote><h1 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h1><h2 id="hexo-server"><a href="#hexo-server" class="headerlink" title="hexo-server"></a><a href="https://github.com/hexojs/hexo-server">hexo-server</a></h2><p>一般写作都是在本地的（不会有人用vi在VPS端写吧?)，所以很多时候都是本地搭个server，写完后预览一下效果再deploy到VPS上。</p><p>Hexo 3.0 把服务器独立成了个别模块，必须先安装 <a href="https://github.com/hexojs/hexo-server">hexo-server</a> 才能使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure><p>安装完成后，输入以下命令以启动服务器，您的网站会在 <code>http://localhost:4000</code> 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，无须重启服务器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>如果想要更改端口，或是在执行时遇到了 <code>EADDRINUSE</code> 错误，可以在执行时使用 <code>-p</code> 选项指定其他端口，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure><h3 id="静态模式"><a href="#静态模式" class="headerlink" title="静态模式"></a>静态模式</h3><p>在静态模式下，服务器只处理 <code>public</code> 文件夹内的文件，而不会处理文件变动，在执行时，应该先自行执行 <code>hexo generate</code>，此模式通常用于生产环境（production mode）下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -s</span><br></pre></td></tr></table></figure><h3 id="自定义-IP"><a href="#自定义-IP" class="headerlink" title="自定义 IP"></a>自定义 IP</h3><p>服务器默认运行在 <code>0.0.0.0</code>，您可以覆盖默认的 IP 设置，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></table></figure><p>指定这个参数后，就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的<code>127.0.0.1</code>外，通常还有一个<code>192.168.*.*</code>的局域网IP，如果像上面那样使用<code>-i</code>参数，就不能用<code>127.0.0.1</code>来访问站点了。对于有公网IP的主机，如果指定一个局域网IP作为<code>-i</code>参数的值，那么就无法通过公网来访问站点。</p><p>平时本地调试时候，我一般使用</p><p><code>hexo g &amp;&amp; hexo server</code> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文大部分内容来自于Hexo的官方网站，自己摘录下来一些经常使用的Hexo指令。&lt;/p&gt;
&lt;h1 id=&quot;写作：&quot;&gt;&lt;a href=&quot;#写作：&quot; class=&quot;headerlink&quot; title=&quot;写作：&quot;&gt;&lt;/a&gt;写作：&lt;/h1&gt;&lt;p&gt;&lt;code&gt;hexo new [la</summary>
      
    
    
    
    <category term="hexo教程" scheme="https://mylucky.cyou/categories/hexo%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="https://mylucky.cyou/tags/hexo/"/>
    
    <category term="blog" scheme="https://mylucky.cyou/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>hexo下使用Typroa编辑图片路径问题的解决</title>
    <link href="https://mylucky.cyou/post/20231215142215.html"/>
    <id>https://mylucky.cyou/post/20231215142215.html</id>
    <published>2023-12-15T06:22:15.000Z</published>
    <updated>2023-12-19T08:54:49.074Z</updated>
    
    <content type="html"><![CDATA[<p>在兴致勃勃的折腾了hexo Blog后的几天，上传了几篇与sub-store有关的文章，配了些图，在我的两个Blog上面都上传了，那边是wordpress平台的，也搭建了一段时间，很顺利，而这边就发现图片显示不出来了。</p><p>  如果你看过我之前的那篇<a href="https://mylucky.cyou/post/20231209231814.html">《Hexo永久链接（Permalinks）生成方式比较》</a> 就知道，我的Blog链接是通过时间方式生成的链接，而Typroa插进去的图片在上传后，hexo生成过程中，将图片等资源的文件夹进行了重命名，但是html中还保留着原来的相对路径，这导致图片的相对路径就不对了，在试验过 <code>hexo-renderer-marked</code>、<code>hexo-asset-image</code> 等几种方案，其中还因为按照那上面修改一些代码，导致我的Blog本地不知道哪个地方出错，<code>hexo g</code> 之后运行 <code>hexo server</code> 不能生成index.html，在我新建了个文件夹重新hexo init 后，继续搜索发现了 <code>hexo-image-link</code> 这款插件，而且知乎上有人说能解决这个问题。</p><p>抱着死马当着活马医的心态，<code>npm install hexo-image-link –save</code> 安装了，并且修改了一篇文章后本地预览了一下，确实能够正确的显示图片了。</p><p> <strong>具体步骤</strong>：</p><ul><li>修改<code>_config.yml</code>中的<code>post_asset_folder: true</code></li><li><code>npm install hexo-image-link --save</code></li><li>如果 npm下载比较慢的话，尝试 cnpm下载<ul><li><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></li><li><code>cnpm install hexo-image-link --save</code></li></ul></li><li>将Typroa中图片的设置改为复制到指定路径 .&#x2F;${filename},如下图所示</li></ul><img src="/post/20231215142215/CC2023-12-15at14.59.00@2x.png" class="" title="CC2023-12-15at14.59.00@2x"><p>作者的GitHub是：<a href="https://github.com/getsomecat/hexo-image-link">https://github.com/getsomecat/hexo-image-link</a> 感谢</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在兴致勃勃的折腾了hexo Blog后的几天，上传了几篇与sub-store有关的文章，配了些图，在我的两个Blog上面都上传了，那边是wordpress平台的，也搭建了一段时间，很顺利，而这边就发现图片显示不出来了。&lt;/p&gt;
&lt;p&gt;  如果你看过我之前的那篇&lt;a href</summary>
      
    
    
    
    <category term="hexo教程" scheme="https://mylucky.cyou/categories/hexo%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="https://mylucky.cyou/tags/hexo/"/>
    
    <category term="blog" scheme="https://mylucky.cyou/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>通过Docker在VPS上架设Sub-Store</title>
    <link href="https://mylucky.cyou/post/20231214220224.html"/>
    <id>https://mylucky.cyou/post/20231214220224.html</id>
    <published>2023-12-14T14:02:24.000Z</published>
    <updated>2023-12-19T08:53:25.879Z</updated>
    
    <content type="html"><![CDATA[<p>之前写了一篇《通过VPS架设Sub-Store》，有人问我能不能写用Docker，说实话，我自己对于Docker也是很不熟悉，于是就着小一写的那个很简单的教程，硬着头皮边摸索边写，过程中如有疏漏，请指出。</p><h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>本文涉及的任何解锁和解密分析脚本仅用于资源共享和学习研究，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断。</p><p>间接使用脚本的任何用户，包括但不限于建立VPS或在某些行为违反国家&#x2F;地区法律或相关法规的情况下进行传播, 本文作者对于由此引起的任何隐私泄漏或其他后果概不负责。</p><p>请勿将本文内的任何内容用于商业或非法目的，否则后果自负。</p><p>如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我将在收到认证文件后删除相关脚本。</p><p>对任何本文中包含的脚本在使用中可能出现的问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害．</p><p>您必须在下载后的24小时内从计算机或手机中完全删除以上内容。</p><p>任何以任何方式查看此项目的人或直接或间接使用该项目的任何脚本的使用者都应仔细阅读此声明。本文作者保留随时更改或补充此免责声明的权利。一旦使用并复制了任何本文相关脚本或其他内容，则视为您已接受此免责声明。</p><h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><h3 id="Sub-Store："><a href="#Sub-Store：" class="headerlink" title="Sub-Store："></a>Sub-Store：</h3><p>项目仓库：<a href="https://github.com/sub-store-org/Sub-Store">https://github.com/sub-store-org/Sub-Store</a></p><p>sub-store最早是Peng-YM在loon平台推出的高级订阅管理工具。完全本地解析，无订阅泄露的风险。经过后续发展，现在已经适配了Surge 和 Quantumult X 以及 Shadowrocket、Clash。</p><h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><ul><li>订阅转换</li><li>组合订阅</li><li>订阅过滤</li><li>订阅重命名</li><li>订阅排序</li><li>订阅同步</li></ul><h2 id="需要的"><a href="#需要的" class="headerlink" title="需要的"></a>需要的</h2><ul><li>一台VPS（配置不建议太低）</li><li>拥有自己的域名并且已经托管到了CloudFlare（其它地方的也行，但是习惯了CloudFlare，并且很良心也很方便）</li><li>SSH 工具（强烈推荐Termius）</li></ul><h2 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h2><h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line">apt-get update &amp;&amp; apt-get full-upgrade -y</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>如果系统里面没有Docker，那么需要安装Docker</p></blockquote><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>国外vps：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker </span><br></pre></td></tr></table></figure><p>国内vps：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun </span><br></pre></td></tr></table></figure><p>如果想手动安装Docker，请参照<a href="https://docs.docker.com/engine/install/">官方文档</a></p><h3 id="安装Sub-Store镜像"><a href="#安装Sub-Store镜像" class="headerlink" title="安装Sub-Store镜像"></a>安装Sub-Store镜像</h3><p>此处采用的是目前 Sub-Store 当前主要维护者之一 @xream （小一）的docker镜像 </p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>数据文件夹: <code>/root/sub-store-data</code></p><p>端口: <code>3001</code></p><p>监听:<code> 127.0.0.1</code></p><p>后端前缀（API）: <code>/2cXaAxRGfddmGz2yx1wA</code></p><p>复制下面指令一键运行即可</p><blockquote><p>可以将其中的 2cXaAxRGfddmGz2yx1wA 字段改为其它复杂字符串</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --restart=always -e SUB_STORE_FRONTEND_BACKEND_PATH=/2cXaAxRGfddmGz2yx1wA -p 127.0.0.1:3001:3001 -v /root/sub-store-data:/opt/app/data --name sub-store xream/sub-store</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/post/20231214220224/CC2023-12-14at22.49.56@2x.png" class=""><p>按照上面一键指令运行后的sub-store地址为： 本地前端+本地后端+API</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:3001?api=http://127.0.0.1:3001/2cXaAxRGfddmGz2yx1wA</span><br></pre></td></tr></table></figure><blockquote><p>Tips:可以通过 <code>docker help</code> 查看docker的各项指令<br><code>docker stats </code>指令查看当前运行中的docker状态</p></blockquote><blockquote><p>如果你不想部署nginx，到此处已经结束，可以直接通过IP的方式来进行使用，访问方式为:<code>http://x.x.x.x:3001?api=http://x.x.x.x:3001/2cXaAxRGfddmGz2yx1wA </code> (将其中的x.x.x.x换成你的VPS IP）如果想使用域名并使用ssl，请接着往下看。</p></blockquote><h3 id="域名设置："><a href="#域名设置：" class="headerlink" title="域名设置："></a>域名设置：</h3><p>在cloudflare的域名DNS记录里面添加一个A记录</p><p> <code>substore.domain.com</code> </p><blockquote><p>实际A记录的名字随意，只要你能区分就行</p></blockquote><p>如下图例：</p><img src="/post/20231214220224/CC2023-12-17at16.48.13@2x-2802981.png" class="" title="CC2023-12-17at16.48.13@2x"><blockquote><p>备注：后面的代理黄云勾不勾随意，如果你用其它第三方ssl证书可以不勾，如果用CF的证书就勾上。</p></blockquote><h2 id="nginx部署过程"><a href="#nginx部署过程" class="headerlink" title="nginx部署过程"></a>nginx部署过程</h2><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx -y</span><br></pre></td></tr></table></figure><h3 id="编辑nginx配置"><a href="#编辑nginx配置" class="headerlink" title="编辑nginx配置"></a>编辑nginx配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-enabled/sub-store.conf</span><br></pre></td></tr></table></figure><p>根据自己的前面域名设置将以下内容改好后复制进去并保存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 443 ssl http2;</span><br><span class="line">  listen [::]:443 ssl http2;</span><br><span class="line">  server_name substore.yourdomain.com;  //将此处改为你自己的域名</span><br><span class="line"></span><br><span class="line">  ssl_certificate /root/cert/ssl.pem;    //将此处改为你自己ssl公钥证书位置和名字</span><br><span class="line">  ssl_certificate_key /root/cert/ssl.key; //将此处改为你自己ssl私钥</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:3001;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编写完毕保存后输入：<code>nginx -t</code> 查看配置是否正确，如果正确输入：<code>nginx -s reload</code>重载配置，如果出现错误输入：<code>nginx -s stop</code> 停止nginx运行， 并根据提示信息进行排查。</p><h2 id="使用CloudFlare的15年ssl证书步骤"><a href="#使用CloudFlare的15年ssl证书步骤" class="headerlink" title="使用CloudFlare的15年ssl证书步骤"></a>使用CloudFlare的15年ssl证书步骤</h2><ul><li><p>将域名托管到cloudflare后，将旁边那朵云点上变为黄色</p></li><li><p>在左侧的SSL&#x2F;TLS栏目下概述中，将加密模式改为完全（严格）</p><img src="/post/20231214220224/CC2023-12-13at15.37.35@2x-2801844.png" class="" title="CC2023-12-13at15.37.35@2x"></li><li><p>点击左侧的源服务器，在源证书中选择创建证书</p><img src="/post/20231214220224/CC2023-12-13at15.38.50@2x-2802448.png" class="" title="CC2023-12-13at15.38.50@2x"></li><li><p>选择 RSA（2048），并创建证书</p><img src="/post/20231214220224/CC2023-12-13at15.40.57@2x-2620778.png" class=""></li><li><p>将随后出现的私钥和公钥，分别复制并保存下来</p><img src="/post/20231214220224/CC2023-12-13at15.41.47@2x-2802471.png" class="" title="CC2023-12-13at15.41.47@2x"></li></ul><p><strong>请注意，私钥仅显示一次，请务必保存好</strong></p><ul><li><p>打开ssh软件，并且链接上VPS后</p></li><li><p>创建文件夹 cert<br><code>mkdir cert</code></p><p><code>cd cert</code></p></li><li><p>创建公钥文件<br><code>vim ssl.pem</code></p></li><li><p>将上面的cloudflare证书公钥内容粘贴进去并保存</p><img src="/post/20231214220224/CC2023-12-13at15.45.31@2x-2801878.png" class="" title="CC2023-12-13at15.45.31@2x"></li><li><p>创建私钥文件<br><code>vim ssl.key</code></p></li><li><p>将上面的cloudflare证书私钥内容粘贴进去并保存</p><img src="/post/20231214220224/CC2023-12-13at15.44.15@2x-2620654-2801900.png" class=""></li></ul><p>至此整个Docker版的sub-store服务搭建完成。</p><p>访问的地址是</p><p><code>https://substore.yourdomain.com?api=https://substore.yourdomain.com/2cXaAxRGfddmGz2yx1wA</code></p><p>本教程编写过程中受到小一 @xream 大力指导，十分感谢。<br>如果在部署使用过程中有疑问，可以进他的telegram群 <a href="https://t.me/zhetengsha_group">https://t.me/zhetengsha_group</a> 交流沟通。</p><blockquote><p>此种方法只使用了一个域名<br>如果想两个域名都用上<br>docker 那部分启动改为</p></blockquote><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --restart=always -p 127.0.0.1:3001:3001 -v /root/sub-store-data:/opt/app/data --name sub-store xream/sub-store</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>nginx部分则<a href="https://surge.tel/19/1974/">参照之前的方法</a>即可。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前写了一篇《通过VPS架设Sub-Store》，有人问我能不能写用Docker，说实话，我自己对于Docker也是很不熟悉，于是就着小一写的那个很简单的教程，硬着头皮边摸索边写，过程中如有疏漏，请指出。&lt;/p&gt;
&lt;h2 id=&quot;免责声明&quot;&gt;&lt;a href=&quot;#免责声明&quot; </summary>
      
    
    
    
    <category term="vps教程" scheme="https://mylucky.cyou/categories/vps%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vps" scheme="https://mylucky.cyou/tags/vps/"/>
    
    <category term="sub-store" scheme="https://mylucky.cyou/tags/sub-store/"/>
    
    <category term="substore" scheme="https://mylucky.cyou/tags/substore/"/>
    
  </entry>
  
  <entry>
    <title>通过VPS架设Sub-Store(新版)</title>
    <link href="https://mylucky.cyou/post/20231213084039.html"/>
    <id>https://mylucky.cyou/post/20231213084039.html</id>
    <published>2023-12-13T00:40:39.000Z</published>
    <updated>2023-12-19T08:53:37.689Z</updated>
    
    <content type="html"><![CDATA[<p>在之前已经写过一篇通过VPS架设专属的<a href="https://surge.tel/19/1974/">Sub-Store</a>用于订阅管理，但是随着Sub-Store的版本迭代，已经增加了很多的新的功能，且部署方式也做了一些变动，在<a href="https://t.me/zhetengsha_group">小一</a>的指导下，梳理了部署流程，重写一篇。</p><h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>本文涉及的任何解锁和解密分析脚本仅用于资源共享和学习研究，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断。</p><p>间接使用脚本的任何用户，包括但不限于建立VPS或在某些行为违反国家&#x2F;地区法律或相关法规的情况下进行传播, 本文作者对于由此引起的任何隐私泄漏或其他后果概不负责。</p><p>请勿将本文内的任何内容用于商业或非法目的，否则后果自负。</p><p>如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我将在收到认证文件后删除相关脚本。</p><p>对任何本文中包含的脚本在使用中可能出现的问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害．</p><p>您必须在下载后的24小时内从计算机或手机中完全删除以上内容。</p><p>任何以任何方式查看此项目的人或直接或间接使用该项目的任何脚本的使用者都应仔细阅读此声明。本文作者保留随时更改或补充此免责声明的权利。一旦使用并复制了任何本文相关脚本或其他内容，则视为您已接受此免责声明。</p><h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><h3 id="Sub-Store："><a href="#Sub-Store：" class="headerlink" title="Sub-Store："></a>Sub-Store：</h3><p>项目仓库：<a href="https://github.com/sub-store-org/Sub-Store">https://github.com/sub-store-org/Sub-Store</a></p><p>sub-store最早是Peng-YM在loon平台推出的高级订阅管理工具。完全本地解析，无订阅泄露的风险。经过后续发展，现在已经适配了Surge 和 Quantumult X 以及 Shadowrocket、Clash。</p><h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h3><ul><li><p>订阅转换</p></li><li><p>组合订阅</p></li><li><p>订阅过滤</p></li><li><p>订阅重命名</p></li><li><p>订阅排序</p></li><li><p>订阅同步</p></li></ul><h2 id="需要的"><a href="#需要的" class="headerlink" title="需要的"></a>需要的</h2><ul><li>一台VPS（配置不建议太低）</li><li>拥有自己的域名并且已经托管到了CloudFlare（其它地方的也行，但是习惯了CloudFlare，并且很良心也很方便）</li><li>SSH 工具（强烈推荐Termius）</li></ul><h2 id="部署过程："><a href="#部署过程：" class="headerlink" title="部署过程："></a>部署过程：</h2><h3 id="域名设置："><a href="#域名设置：" class="headerlink" title="域名设置："></a>域名设置：</h3><p>在cloudflare的域名DNS记录里面添加一个A记录</p><p> <code>substore.domain.com</code> </p><blockquote><p>实际A记录的名字随意，只要你能区分就行</p></blockquote><p>如下图例：</p><img src="/post/20231213084039/CC2023-12-17at16.48.13@2x-2803035.png" class="" title="CC2023-12-17at16.48.13@2x"><blockquote><p>备注：后面的代理黄云勾不勾随意，如果你用其它第三方ssl证书可以不勾，如果用CF的证书就勾上。</p></blockquote><h2 id="前端后端部署"><a href="#前端后端部署" class="headerlink" title="前端后端部署"></a>前端后端部署</h2><h3 id="ssh登陆到vps后，对vps进行常规升级和更新："><a href="#ssh登陆到vps后，对vps进行常规升级和更新：" class="headerlink" title="ssh登陆到vps后，对vps进行常规升级和更新："></a>ssh登陆到vps后，对vps进行常规升级和更新：</h3><blockquote><p>Tip：我是在新开的主机上进行部署，所以有更新和安装过程，如果你上面已经安装有相关的可以跳过</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; apt upgrade -y </span><br></pre></td></tr></table></figure><h3 id="安装-unzip-wget-git"><a href="#安装-unzip-wget-git" class="headerlink" title="安装 unzip wget git"></a>安装 unzip wget git</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install unzip wget git -y</span><br></pre></td></tr></table></figure><h3 id="下载和安装-fnm-（Node-js版本管理器）"><a href="#下载和安装-fnm-（Node-js版本管理器）" class="headerlink" title="下载和安装 fnm （Node.js版本管理器）"></a>下载和安装 fnm （Node.js版本管理器）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://fnm.vercel.app/install | bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/post/20231213084039/CC2023-12-13at09.37.00@2x.png" class=""><h3 id="按照执行后的命令提示执行下一步操作"><a href="#按照执行后的命令提示执行下一步操作" class="headerlink" title="按照执行后的命令提示执行下一步操作"></a>按照执行后的命令提示执行下一步操作</h3><p><strong>看上一步的提示复制粘贴 不要抄下面的</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source /root/.bashrc</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><blockquote><p>查看 node.js 版本可以去官网 <a href="https://nodejs.org/en/about/previous-releases">https://nodejs.org/en/about/previous-releases</a><br>这里选取的 v20.10.0 LTS版进行安装</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fnm install v20.10.0</span><br></pre></td></tr></table></figure><img src="/post/20231213084039/CC2023-12-13at09.49.13@2x.png" class=""><blockquote><p>安装完成后可以通过 <code>node -v </code>查看是否安装上以及安装的版本号</p></blockquote><h3 id="安装-PNPM-软件包管理器"><a href="#安装-PNPM-软件包管理器" class="headerlink" title="安装 PNPM 软件包管理器"></a>安装 PNPM 软件包管理器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.pnpm.io/install.sh | sh -</span><br></pre></td></tr></table></figure><h3 id="并根据安装结束的信息执行"><a href="#并根据安装结束的信息执行" class="headerlink" title="并根据安装结束的信息执行"></a>并根据安装结束的信息执行</h3><p><strong>看上一步的提示复制粘贴 不要抄下面的</strong></p><blockquote><p>因为我是在root用户下进行操作，所以有警告信息</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /root/.bashrc</span><br></pre></td></tr></table></figure><img src="/post/20231213084039/CC2023-12-13at09.53.29@2x.png" class=""><h3 id="创建Sub-store的安装文件夹并进入该文件夹"><a href="#创建Sub-store的安装文件夹并进入该文件夹" class="headerlink" title="创建Sub-store的安装文件夹并进入该文件夹"></a>创建Sub-store的安装文件夹并进入该文件夹</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /root/sub-store</span><br><span class="line">cd sub-store</span><br></pre></td></tr></table></figure><blockquote><p>我这里是直接在root根目录下创建的文件夹<br>你可以根据自己的情况选择其它位置<br>但是注意其它位置的后续写service的时候对应目录</p></blockquote><h3 id="下载后端sub-store脚本"><a href="#下载后端sub-store脚本" class="headerlink" title="下载后端sub-store脚本"></a>下载后端sub-store脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://github.com/sub-store-org/Sub-Store/releases/latest/download/sub-store.bundle.js -o sub-store.bundle.js</span><br></pre></td></tr></table></figure><h3 id="下载前端页面压缩包并解压缩"><a href="#下载前端页面压缩包并解压缩" class="headerlink" title="下载前端页面压缩包并解压缩"></a>下载前端页面压缩包并解压缩</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://github.com/sub-store-org/Sub-Store-Front-End/releases/latest/download/dist.zip -o dist.zip</span><br></pre></td></tr></table></figure><p>解压缩<br>    重命名<br>    删除原包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip dist.zip &amp;&amp; mv dist frontend &amp;&amp; rm dist.zip</span><br></pre></td></tr></table></figure><h3 id="编写服务"><a href="#编写服务" class="headerlink" title="编写服务"></a>编写服务</h3><p>输入下面指令编写服务：</p><p><code>vim /etc/systemd/system/sub-store.service</code></p><p>将下列文本根据自己的<strong>用户名</strong>和<strong>文件夹名字</strong>进行修改后粘贴进去：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Sub-Store</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target systemd-networkd-wait-online.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">LimitNOFILE=32767</span><br><span class="line">Type=simple</span><br><span class="line">Environment=&quot;SUB_STORE_FRONTEND_BACKEND_PATH=/2cXaAxRGfddmGz2yx1wA&quot;</span><br><span class="line">Environment=&quot;SUB_STORE_FRONTEND_PATH=/root/sub-store/frontend&quot;</span><br><span class="line">Environment=&quot;SUB_STORE_FRONTEND_HOST=127.0.0.1&quot;</span><br><span class="line">Environment=&quot;SUB_STORE_FRONTEND_PORT=3001&quot;</span><br><span class="line">Environment=&quot;SUB_STORE_DATA_BASE_PATH=/root/sub-store&quot;</span><br><span class="line">Environment=&quot;SUB_STORE_BACKEND_API_HOST=127.0.0.1&quot;</span><br><span class="line">Environment=&quot;SUB_STORE_BACKEND_API_PORT=3000&quot;</span><br><span class="line">ExecStart=/root/.local/share/fnm/fnm exec --using v20.10.0 node /root/sub-store/sub-store.bundle.js</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5s</span><br><span class="line">ExecStartPre=/bin/sh -c ulimit -n 51200</span><br><span class="line">StandardOutput=journal</span><br><span class="line">StandardError=journal</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>备注：上面的 Environment&#x3D;SUB_STORE_FRONTEND_BACKEND_PATH&#x3D;&#x2F;2cXaAxRGfddmGz2yx1wA<br>其中的 2cXaAxRGfddmGz2yx1wA 请自行更改为其它复杂内容并保密，这是后面API部分作为验证使用的</p><p>如图所示：</p><img src="/post/20231213084039/CC2023-12-13at19.11.23@2x.png" class=""><blockquote><p>请注意：我图中的脚本名字自己进行了修改，所以和教程中的名字有所不同。<br>教程中脚本名字为:sub-store.bundle.js 我自己修改为 sub-store-bundle.js<br>在自己部署过程中请千万注意<strong>脚本名字</strong>和<strong>文件夹名</strong><br>这个错误导致我卡住了一个多小时😅<br>一个低级错误，又不好意思群里问，跟着ChatGPT下不断的修改，最后发现是文件名错误</p></blockquote><p>粘贴进去后按 esc 键，接着输入 <code>:wq</code>保存退出</p><p>接下来先将服务启动</p><p><code>systemctl start sub-store.service</code></p><p>将服务设为系统服务并开机自启动</p><p><code>systemctl enable sub-store.service</code></p><p> 查看运行状态<br><code>systemctl status sub-store.service</code></p><p> 正常情况下会显示如下：<br> <img src="/post/20231213084039/CC2023-12-13at14.44.10@2x.png" class=""></p><p><strong>图示中的服务名我编写为substore.service，和教程有所不同</strong></p><p>如果出现报错信息<br>使用指令：</p><p><code>journalctl -f -u sub-store -o cat -n 100</code></p><p>来查看具体的错误信息和原因来进行解决</p><p>至此前后端的部署部分已经完成，接下来就是nginx部分。</p><h2 id="nginx部署过程"><a href="#nginx部署过程" class="headerlink" title="nginx部署过程"></a>nginx部署过程</h2><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx -y</span><br></pre></td></tr></table></figure><h3 id="编辑nginx配置"><a href="#编辑nginx配置" class="headerlink" title="编辑nginx配置"></a>编辑nginx配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-enabled/sub-store.conf</span><br></pre></td></tr></table></figure><p>根据自己的前面域名设置将以下内容改好后复制进去并保存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 443 ssl http2;</span><br><span class="line">  listen [::]:443 ssl http2;</span><br><span class="line">  server_name substore.yourdomain.com;  //将此处改为你自己的域名</span><br><span class="line"></span><br><span class="line">  ssl_certificate /root/cert/ssl.pem;    //将此处改为你自己ssl公钥证书位置和名字</span><br><span class="line">  ssl_certificate_key /root/cert/ssl.key; //将此处改为你自己ssl私钥</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:3001;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编写完毕保存后输入：<code>nginx -t</code> 查看配置是否正确，如果正确输入：<code>nginx -s reload</code>重载配置，如果出现错误输入：<code>nginx -s stop</code> 停止nginx运行， 并根据提示信息进行排查。</p><h2 id="使用CloudFlare的15年ssl证书步骤"><a href="#使用CloudFlare的15年ssl证书步骤" class="headerlink" title="使用CloudFlare的15年ssl证书步骤"></a>使用CloudFlare的15年ssl证书步骤</h2><ul><li><p>将域名托管到cloudflare后，将旁边那朵云点上变为黄色</p></li><li><p>在左侧的SSL&#x2F;TLS栏目下概述中，将加密模式改为完全（严格）</p><img src="/post/20231213084039/CC2023-12-13at15.37.35@2x.png" class=""></li><li><p>点击左侧的源服务器，在源证书中选择创建证书</p></li><li><p>选择 RSA（2048），并创建证书</p><img src="/post/20231213084039/CC2023-12-13at15.38.50@2x-2802078.png" class=""></li><li><p>将随后出现的私钥和公钥，分别复制并保存下来</p><img src="/post/20231213084039/CC2023-12-13at15.40.57@2x-2802135.png" class="" title="CC2023-12-13at15.40.57@2x"></li></ul><p><strong>请注意，私钥仅显示一次，请务必保存好</strong></p><img src="/post/20231213084039/CC2023-12-13at15.41.47@2x-2802163.png" class="" title="CC2023-12-13at15.41.47@2x"><ul><li><p>打开ssh软件，并且链接上VPS后</p></li><li><p>创建文件夹 cert<br><code>mkdir cert</code></p><p><code>cd cert</code></p></li><li><p>创建公钥文件<br><code>vim ssl.pem</code></p></li><li><p>将上面的cloudflare证书公钥内容粘贴进去并保存</p><img src="/post/20231213084039/CC2023-12-13at15.45.31@2x.png" class=""></li><li><p>创建私钥文件<br><code>vim ssl.key</code></p></li><li><p>将上面的cloudflare证书私钥内容粘贴进去并保存</p><img src="/post/20231213084039/CC2023-12-13at15.44.15@2x-2620654.png" class=""></li></ul><p>至此整个VPS版的sub-store服务搭建完成<br>访问的地址是</p><p><code>https://substore.yourdomain.com?api=https://substore.yourdomain.com/2cXaAxRGfddmGz2yx1wA</code></p><p>如果后续需要更新，只需要更新后端的脚本即可</p><p>先停止服务</p><p><code>systemctl stop sub-store.service</code></p><p>更新脚本</p><p><code>curl -fsSL https://github.com/sub-store-org/Sub-Store/releases/latest/download/sub-store.bundle.js -o sub-store.bundle.js</code></p><p>重载服务</p><p><code>systemctl daemon-reload</code></p><p>启动服务</p><p><code>systemctl start sub-store.service</code></p><p>查看状态</p><p><code>systemctl status sub-store.service</code></p><p>在该方法中只使用了一个域名，如果要两个域名都使用上<a href="https://surge.tel/19/1974/">参照之前的方法</a>即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在之前已经写过一篇通过VPS架设专属的&lt;a href=&quot;https://surge.tel/19/1974/&quot;&gt;Sub-Store&lt;/a&gt;用于订阅管理，但是随着Sub-Store的版本迭代，已经增加了很多的新的功能，且部署方式也做了一些变动，在&lt;a href=&quot;https:</summary>
      
    
    
    
    <category term="vps教程" scheme="https://mylucky.cyou/categories/vps%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vps" scheme="https://mylucky.cyou/tags/vps/"/>
    
    <category term="sub-store" scheme="https://mylucky.cyou/tags/sub-store/"/>
    
    <category term="substore" scheme="https://mylucky.cyou/tags/substore/"/>
    
  </entry>
  
  <entry>
    <title>Hexo永久链接（Permalinks）生成方式比较</title>
    <link href="https://mylucky.cyou/post/20231209231814.html"/>
    <id>https://mylucky.cyou/post/20231209231814.html</id>
    <published>2023-12-09T15:18:14.000Z</published>
    <updated>2023-12-19T08:55:10.956Z</updated>
    
    <content type="html"><![CDATA[<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>Hexo生成永久链接（Permalinks）的最佳方式是在站点配置文件_config.yml中进行如下设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">permalink: :layout/:year:month:day:hour:minute:second.html</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure><p>Hexo生成博客文章URL链接时，默认是:year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;这样的格式。如果博客文件名有中文的话，URL链接就会包含中文，复制URL路径把它粘贴到其他地方就会把中文变成一大堆乱码，使用不便而且会影响网站的SEO，同时链接层级太多也将影响SEO。</p><p>URL构成越简单越好，百度建议URL不要超过255字节。一个英文字符1字节，一个中文字符2字节。</p><h1 id="方法一：设为title"><a href="#方法一：设为title" class="headerlink" title="方法一：设为title"></a>方法一：设为title</h1><p>最容易想到的方法，把URL设置成如下格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :layout/:title.html</span><br></pre></td></tr></table></figure><p><code>:layout</code>为布局，<code>:title</code>为文件名，如果有篇名为《test-post》的文章其链接将会是这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.duheweb.com/post/test-post.html</span><br></pre></td></tr></table></figure><p>这种方法有3个缺陷：</p><ol><li><p>文章名必须为中文，这对中文博主来说很不友好，后期面对一堆全是英文名的md文件特别令人头疼。</p></li><li><p>不能改文件名，文件名一变，URL也会变化。</p></li><li><p>文件名不能起太长，否则会影响SEO，同时太长的文件名使得URL也不美观。文件名短的话其含义就会与文章标题有较大偏差，给后期维护造成混乱。</p></li></ol><h1 id="方法二：hexo-abbrlink插件"><a href="#方法二：hexo-abbrlink插件" class="headerlink" title="方法二：hexo-abbrlink插件"></a>方法二：hexo-abbrlink插件</h1><p>如果你之前有搜索过的话，可以发现这种方法有很多人推荐</p><p>安装<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink插件</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>站点配置文件_config.yml设置成这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink.html  # 此处可以自己设置，也可以直接使用 :/abbrlink</span><br><span class="line">abbrlink:</span><br><span class="line">    alg: crc32   #算法： crc16(default) and crc32</span><br><span class="line">    rep: dex     #进制： dec(default) and hex</span><br></pre></td></tr></table></figure><p>生成的链接像这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.duheweb.com/posts/1690090958.html</span><br></pre></td></tr></table></figure><p>这种方法也有缺陷：</p><p>重新生成的URL可能与之前不一样，喜欢双备份的人用此插件容易混淆URL。因为这种方法执行<code>hexo generate</code>才会在博客md文件的<code>Front-matter </code>内增加abbrlink字段，这个字段就是URL的末尾。如果一篇博客耗时几天写了多个版本（V1和V2）才写完，在此期间没有执行过<code>hexo generate</code>，部署V2版本一段时间后才觉得V1版本更好，但此时V1是没有abbrlink字段，还得把V2的abbrlink复制到V2中。如果不复制，让插件再自动生成URL的话，新生成的URL可能会与以前不一样。因为即使abbrlink插件使用crc32算法生成abbrlink，也有重复的可能，遇到重复的情况插件会把abbrlink加1。那么问题来了，也许生成V2的abbrlink时没有加1，生成V1时却加1了，前后两个版本的URL就会不一样。</p><p>解释的可能有点绕，总之记住，用该插件重新生成一篇文章的URL可能与之前不一样，而实际使用中我们难免会有重新生成URL的需求。</p><h1 id="方法三：hexo-abbrlink2插件"><a href="#方法三：hexo-abbrlink2插件" class="headerlink" title="方法三：hexo-abbrlink2插件"></a>方法三：hexo-abbrlink2插件</h1><p>hexo-abbrlink的作者开发出了<a href="https://github.com/rozbo/hexo-abbrlink2">hexo-abbrlink2插件</a>，这个插件可以使URL从指定数字开始递增，像这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.duheweb.com/posts/1.html</span><br><span class="line">https://www.duheweb.com/posts/2.html</span><br><span class="line">https://www.duheweb.com/posts/3.html</span><br></pre></td></tr></table></figure><p>这个方法同样也有缺陷：</p><p>同时生成多篇文章的URL时会重复，这是插件自身的bug。</p><p>与hexo-abbrlink存在同样的问题，重新生成的URL可能与之前不一样。</p><h1 id="方法四：设为hash"><a href="#方法四：设为hash" class="headerlink" title="方法四：设为hash"></a>方法四：设为hash</h1><p>hexo-abbrlink和hexo-abbrlink2插件出现此缺陷的原因是，他们不是在创建md文件时就生成URL（即生成abbrlink字段），如果我们能在执行hexo new就生成URL，这个问题企不是就解决了。</p><p>查阅Hexo的官方文档，发现还真可以，方法如下：</p><p>站点配置文件_config.yml设置成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :layout/:hash.html</span><br></pre></td></tr></table></figure><p>:hash会根据文件名及date生成的URL，date就是文章md文件Front-matter 内的字段。生成的URL像这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.duheweb.com/post/3b48da9a3b8b.html</span><br></pre></td></tr></table></figure><p>似乎很完美的解决了方法二、三的缺陷，因为date是创建md文件时就生成的，URL也很简短。</p><p>但它同样有问题，部署后不能再更改文件名。这对博主也是个较大的限制，谁也不能保证发表前取的文件名能一直符合心意，后期稍不留神就把文件名改了，然后URL也随之变化。</p><h1 id="方法五：设为日期"><a href="#方法五：设为日期" class="headerlink" title="方法五：设为日期"></a>方法五：设为日期</h1><p><code>:hash</code>方法提醒了我们，date字段是生成URL的优良种子，我们何不用date直接生成URL呢。想到就做，把站点配置文件<code>_config.yml</code>设置成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :layout/:date.html</span><br></pre></td></tr></table></figure><p>然后执行<code>hexo generate</code>，发现会报错，因为date形如“2021-04-12 13:15:54”，中间有空格。不过这很好解决，参考Hexo的官方文档，设置成这样就可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :layout/:year:month:day:hour:minute:second.html</span><br></pre></td></tr></table></figure><p>生成的URL如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.duheweb.com/post/20210412131554.html</span><br></pre></td></tr></table></figure><p>还要注意站点配置文件中的pretty_urls设置是否是这样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure><p>设为false的话，链接就变成了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.duheweb.com/post/20210412131554</span><br></pre></td></tr></table></figure><p>去掉URL末尾的.html，更简洁了。带不带html对SEO收录来说，影响不大，但不带html发外链的时候，有些平台编辑器会自动在URL后面加一个“&#x2F; ”造成404页面。所以，最好还是带上html，同时也能给人一种静态页面的安全感。</p><p>本文作者： 杜和<br>本文链接： <a href="https://www.duheweb.com/post/20210414222449.html">https://www.duheweb.com/post/20210414222449.html</a><br>版权声明： 本博客所有文章除特别声明外，均采用 BY 许可协议。转载请注明出处！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h1&gt;&lt;p&gt;Hexo生成永久链接（Permalinks）的最佳方式是在站点配置文件_config.yml中进行如下设置：&lt;/p&gt;
&lt;figure cla</summary>
      
    
    
    
    <category term="hexo教程" scheme="https://mylucky.cyou/categories/hexo%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="https://mylucky.cyou/tags/hexo/"/>
    
    <category term="blog" scheme="https://mylucky.cyou/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>一些健身装备简评</title>
    <link href="https://mylucky.cyou/post/20231209221943.html"/>
    <id>https://mylucky.cyou/post/20231209221943.html</id>
    <published>2023-12-09T14:19:43.000Z</published>
    <updated>2023-12-18T01:32:30.475Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>收集整理的一些常用命令行</title>
    <link href="https://mylucky.cyou/post/20231209101919.html"/>
    <id>https://mylucky.cyou/post/20231209101919.html</id>
    <published>2023-12-09T02:19:19.000Z</published>
    <updated>2023-12-19T08:53:03.003Z</updated>
    
    <content type="html"><![CDATA[<h1 id="收集整理的一些常用命令行"><a href="#收集整理的一些常用命令行" class="headerlink" title="收集整理的一些常用命令行"></a>收集整理的一些常用命令行</h1><p>  转自 ：<a href="https://noooy.com/2023/12/e76f8f1a9ce2.html">https://noooy.com/2023/12/e76f8f1a9ce2.html</a></p><h2 id="Docker、Docker-Compose-官方一键安装"><a href="#Docker、Docker-Compose-官方一键安装" class="headerlink" title="Docker、Docker Compose 官方一键安装"></a>Docker、Docker Compose 官方一键安装</h2><blockquote><p>新版 docker compose 命令去掉了“-”</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker</span><br></pre></td></tr></table></figure><h2 id="一键安装-Telegram-人形-bot"><a href="#一键安装-Telegram-人形-bot" class="headerlink" title="一键安装 Telegram 人形 bot"></a>一键安装 Telegram 人形 bot</h2><blockquote><p>较原版增加了端口配置，方便启动多个 bot</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c &quot;$(curl -sL https://raw.githubusercontent.com/durianice/pgp-install/main/docker-install.sh)&quot;</span><br></pre></td></tr></table></figure><h2 id="一键-Snell"><a href="#一键-Snell" class="headerlink" title="一键 Snell"></a>一键 Snell</h2><blockquote><p>仅生成适用于 Surge iOS&#x2F;Mac 的客户端配置</p></blockquote><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c &quot;$(curl -sL https://raw.githubusercontent.com/CCCOrz/auto-snell/main/install.sh)&quot;</span><br></pre></td></tr></table></figure><p>卸载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c &quot;$(curl -sL https://raw.githubusercontent.com/CCCOrz/auto-snell/main/uninstall.sh)&quot;</span><br></pre></td></tr></table></figure><h2 id="Certbot-一键申请证书"><a href="#Certbot-一键申请证书" class="headerlink" title="Certbot 一键申请证书"></a>Certbot 一键申请证书</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c &quot;$(curl -sL https://raw.githubusercontent.com/CCCOrz/Cert-Cluster/main/start.sh)&quot;</span><br></pre></td></tr></table></figure><h2 id="qBittorrent-一键安装"><a href="#qBittorrent-一键安装" class="headerlink" title="qBittorrent 一键安装"></a>qBittorrent 一键安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c &quot;$(curl -sL https://raw.githubusercontent.com/CCCOrz/qBittorrent-install/main/qBittorrent-install.sh)&quot;</span><br></pre></td></tr></table></figure><h2 id="Tuic-一键"><a href="#Tuic-一键" class="headerlink" title="Tuic 一键"></a>Tuic 一键</h2><blockquote><p>含证书申请<br>仅生成适用于 Surge iOS&#x2F;Mac 的客户端配置</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/CCCOrz/auto-tuic/main/tuic.sh &amp;&amp; bash tuic.sh</span><br></pre></td></tr></table></figure><h2 id="tinymediamanager-一键"><a href="#tinymediamanager-一键" class="headerlink" title="tinymediamanager 一键"></a>tinymediamanager 一键</h2><blockquote><p>前往仓库查看，区分 AMD&#x2F;ARM</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/durianice/tinymediamanager-docker</span><br></pre></td></tr></table></figure><h2 id="一键-SS"><a href="#一键-SS" class="headerlink" title="一键 SS"></a>一键 SS</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O ss-rust.sh --no-check-certificate https://raw.githubusercontent.com/xOS/Shadowsocks-Rust/master/ss-rust.sh &amp;&amp; chmod +x ss-rust.sh &amp;&amp; ./ss-rust.sh</span><br></pre></td></tr></table></figure><h2 id="一键-h2"><a href="#一键-h2" class="headerlink" title="一键 h2"></a>一键 h2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/Misaka-blog/hysteria-install/main/hy2/hysteria.sh &amp;&amp; bash hysteria.sh</span><br></pre></td></tr></table></figure><h2 id="测试回程路由"><a href="#测试回程路由" class="headerlink" title="测试回程路由"></a>测试回程路由</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/sjlleo/nexttrace/main/nt_install.sh)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Naiveproxy-docker"><a href="#Naiveproxy-docker" class="headerlink" title="Naiveproxy-docker"></a>Naiveproxy-docker</h2><p><a href="https://github.com/RayWangQvQ/naiveproxy-docker/blob/main/README.md">文档</a><br><a href="https://github.com/klzgrad/naiveproxy/wiki/Performance-Tuning">性能调优</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ./naive &amp;&amp; cd ./naive \</span><br><span class="line"></span><br><span class="line">bash &lt;(curl -sSL https://raw.githubusercontent.com/RayWangQvQ/naiveproxy-docker/main/install.sh)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;收集整理的一些常用命令行&quot;&gt;&lt;a href=&quot;#收集整理的一些常用命令行&quot; class=&quot;headerlink&quot; title=&quot;收集整理的一些常用命令行&quot;&gt;&lt;/a&gt;收集整理的一些常用命令行&lt;/h1&gt;&lt;p&gt;  转自 ：&lt;a href=&quot;https://noooy.c</summary>
      
    
    
    
    <category term="vps教程" scheme="https://mylucky.cyou/categories/vps%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="vps" scheme="https://mylucky.cyou/tags/vps/"/>
    
    <category term="linux" scheme="https://mylucky.cyou/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>hexo 部署</title>
    <link href="https://mylucky.cyou/post/20231208131919.html"/>
    <id>https://mylucky.cyou/post/20231208131919.html</id>
    <published>2023-12-08T05:19:19.000Z</published>
    <updated>2023-12-19T08:54:36.950Z</updated>
    
    <content type="html"><![CDATA[<p>虽然已经有了一个<a href="https://surge.tel/">blog</a>，但是那个是用wordpress部署的，是Lucky费了老大劲，帮了不少忙，但是用起来总觉得太臃肿，WordPress就是这样，功能大而全，你想要的都能实现，但是很难实现，需要的东西太多，Nginx、MySQL什么的一大堆，对于普通的人来说，过程就很复杂了。也试过用ghost来部署，但是感觉部署过程中也是很多问题，而且对新手也不算友好，也一直想试试传说中的hexo，双十一、黑五期间又陆陆续续的入手了一些小鸡，也出了一些，光搭个节点啥的很浪费，于是又捡起之前部署失败无数次的hexo，重新弄了起来，终于算是成功了，于是就有了这篇文章，这个Blog。<br>下面简单的写一下过程：</p><h2 id="需要准备的"><a href="#需要准备的" class="headerlink" title="需要准备的"></a>需要准备的</h2><ul><li>一台VPS</li><li>一个域名，并且域名已经托管到了cloudflare，做好了DNS解析</li><li>MacBook（Windows下应该差不多，但是我没有,就只好以Mac下部署为例了）</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="创建本地目录"><a href="#创建本地目录" class="headerlink" title="创建本地目录"></a>创建本地目录</h3><p>⚠️确保本机的 <strong>Git</strong> 和 <strong>Node.js</strong>已经安装</p><p>在本地建立一个文件夹，取名blog<br>Mac下可以直接在个人文档里面建文件夹（Windows应该同理）<br>打开<strong>终端</strong>，输入：<code>cd blog</code>  进入到blog文件夹</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">sudo npm install</span><br><span class="line"></span><br><span class="line">hexo d -fg</span><br><span class="line"></span><br><span class="line">hexo server</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果正常的话，Hexo就已经本地安装完毕，会有提示你打开 <a href="http://localhost:4000/">http://localhost:4000</a> 可以在浏览器看到欢迎页面了，以后加了新的文章或者改动之后，直接hexo server就可以在4000端口检测看看效果。不过这时候只是在本地的，接下来是发布到网络上。</p><h2 id="故障排除："><a href="#故障排除：" class="headerlink" title="故障排除："></a>故障排除：</h2><blockquote><p>When running the first command, I encountered error like Error: Cannot find module ‘…. If you face the same thing, try the following link to fix it. <a href="https://gist.github.com/DanHerbert/9520689">https://gist.github.com/DanHerbert/9520689</a></p></blockquote><h3 id="遇到的问题："><a href="#遇到的问题：" class="headerlink" title="遇到的问题："></a>遇到的问题：</h3><p>重启机器后hexo和npm都不见了，显示错误如下：</p><p><code>zsh: command not found: npm</code><br><code>zsh: command not found: hexo</code></p><p>执行命令 ls ~&#x2F;.npm 发现执行文件都在此目录下</p><p>解决步骤：</p><ol><li><strong>卸载已经安装的 node, npm, 和 nvm (if exists)</strong></li></ol><p>To completely uninstall node + npm is to do the following:</p><p>go to &#x2F;usr&#x2F;local&#x2F;lib and delete any node and node_modules<br>go to &#x2F;usr&#x2F;local&#x2F;include and delete any node and node_modules directory<br>if you installed with brew install node, then run brew uninstall node in your terminal<br>check your Home directory for any local or lib or include folders, and delete any node or node_modules from there<br>go to &#x2F;usr&#x2F;local&#x2F;bin and delete any node executable</p><blockquote><p><a href="http://refactor.ghost.io/2016/01/17/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x/">http://refactor.ghost.io/2016/01/17/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x/</a></p></blockquote><p><code>rm -rf $NVM_DIR ~/.npm ~/.bower</code></p><ol start="2"><li><strong>在Terminal运行下列命令来安装nvm</strong></li></ol><blockquote><p>nvm 是Nodejs版本管理器</p></blockquote><p>Please check the official nvm docs for the latest version link.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash</span><br></pre></td></tr></table></figure><p>安装之后请重启Terminal</p><ol start="3"><li><strong>安装切换各版本 node&#x2F;npm</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">nvm ls-remote           //查看有哪些版本可供安装</span><br><span class="line"></span><br><span class="line">nvm install stable       //安装最新稳定版本</span><br><span class="line"></span><br><span class="line">nvm install 0.12.7         //这里再安装一个0.12.7版本 并把它设为默认</span><br><span class="line"></span><br><span class="line">nvm alias default 0.12.7</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li><strong>使用 .nvmrc 文件配置项目所使用的 node 版本</strong><br>如果你的默认 node 版本（通过 nvm alias 命令设置的）与项目所需的版本不同，则可在项目根目录或其任意父级目录中创建 .nvmrc 文件，在文件中指定使用的 node 版本号，例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd &lt;项目根目录&gt;            //进入项目根目录</span><br><span class="line"></span><br><span class="line">echo 4 &gt; .nvmrc           //添加 .nvmrc 文件</span><br><span class="line"></span><br><span class="line">nvm use                 //无需指定版本号，会自动使用 .nvmrc 文件中配置的版本</span><br><span class="line"></span><br><span class="line">node -v              //查看 node 是否切换为对应版本</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其他人遇到的类似问题解决方法:</p><p><a href="https://yrom.net/blog/2016/08/10/auto-load-node-on-zsh-startup/">https://yrom.net/blog/2016/08/10/auto-load-node-on-zsh-startup/</a></p><p>在另一台电脑上clone repo之后无法使用hexo</p><p><code>ERROR Local hexo not found in ~/Documents/github/hexo_blog</code></p><p>解决方法：</p><p><code>rm -rf node_modules/ &amp;&amp; npm install</code></p><p><strong>如果你遇到没有包含在那上面的问题，请善用搜索。</strong></p><h2 id="VPS端部署过程"><a href="#VPS端部署过程" class="headerlink" title="VPS端部署过程"></a>VPS端部署过程</h2><p>Hexo的VPS端部署其实很简单，就是简单的建立一个文件夹后，将本地生成的静态网页上去，再使用Nginx 代理即可。</p><ol><li>用ssh工具登录到VPS（推荐<a href="https://www.termius.com/">termius</a>）</li></ol><p><em>其它一些教程都是推荐新建一个git用户，作为一个常年root登录的用户，当然不会干这种事情了，不然各种权限设置，各种workdir设置的多麻烦。</em></p><ol start="2"><li>建立blog文件夹并进入文件夹</li></ol><p><code>mkdir /var/www/blog &amp;&amp; cd /var/www/blog</code></p><ol start="3"><li><p>安装Nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt upgrade -y      //升级更新系统</span><br><span class="line"></span><br><span class="line">apt install nginx                 //安装nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>安装完后输入 <code>nginx -V</code> 若出现版本信息，则安装成功</p></li><li><p>配置Nginx</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/sites-available               //切换目录</span><br><span class="line"></span><br><span class="line">cp default default.bak                  //备份默认配置</span><br><span class="line"></span><br><span class="line">vim default                     //修改配置</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参考配置内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default;              //默认监听80端口</span><br><span class="line">    root /var/www/blog;             //网站根目录</span><br><span class="line">    server_name mylucky.cyou, www.mylucky.cyou;  //网址</span><br><span class="line">    access_log  /var/log/nginx/blog_access.log;</span><br><span class="line">    error_log   /var/log/nginx/blog_error.log;</span><br><span class="line">    error_page 404 =  /404.html;</span><br><span class="line"></span><br><span class="line">    location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ &#123;</span><br><span class="line">        root /var/www/blog;</span><br><span class="line">        access_log   off;</span><br><span class="line">        expires      1d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~* ^.+\.(css|js|txt|xml|swf|wav)$ &#123;</span><br><span class="line">        root /var/www/blog;</span><br><span class="line">        access_log   off;</span><br><span class="line">        expires      10m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root /var/www/blog;</span><br><span class="line">        if (-f $request_filename) &#123;</span><br><span class="line">        rewrite ^/(.*)$  /$1 break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /nginx_status &#123;</span><br><span class="line">        stub_status on;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存退出后，输入<code> nginx -t</code> 测试一下配置，如果没有出错信息则启动nginx</p><p>启动 nginx：</p><p><code>systemctl start nginx</code></p><p>设置开机自动启动：</p><p><code>systemctl enable nginx</code></p><p>查看运行状态：</p><p><code>systemctl status nginx</code></p><p>显示 running 表示成功运行。</p><p>这时候在浏览器里面输入你的域名，就可以看到nginx的欢迎信息了，因为我们还没把本地的hexo的内容上传上来呢。</p><h2 id="配置SSL证书"><a href="#配置SSL证书" class="headerlink" title="配置SSL证书"></a>配置SSL证书</h2><p>出于安全性考虑，一般都会给配置个SSL证书，（你也不想每次打开浏览器，地址栏那里显示个不安全吧）</p><p>这里采用certbot来配置</p><p><code>apt install -y certbot python3-certbot-nginx</code></p><p><code>certbot --nginx</code></p><p>第一次运行这个命令会让你填个邮箱，然后yes，no之后选择你要配置证书之后的域名即可，英语都是比较简单的。</p><p>自动更新证书<br>因为这种免费证书都是有期限的，所以设置一个定时任务来到期自动更新<br>输入：</p><p><code>crontab -e</code></p><p>如果你的小鸡没有crontab，那么输入 ：<code>apt install cron</code> 进行安装</p><p>添加一行：</p><p><code>0 0 1 * * /usr/bin/certbot renew --quiet</code></p><p>如果是采用cloudflare的15年证书，则请按照相应的步骤进行，网络上教程很多，就是一个将证书保存到VPS里面，然后在 nginx 的配置步骤。</p><p>配置完nginx和ssl证书后，我们回到本地，需要将本地用Hexo书写的内容生成静态网页，并且上传到VPS里面呈现出来。</p><h2 id="部署Hexo"><a href="#部署Hexo" class="headerlink" title="部署Hexo"></a>部署Hexo</h2><p>Hexo常用的有 git hook 和 rsync 两种自动部署解决方案</p><p>在我们创建的博客目录下执行 hexo generate 后，hexo会将我们编辑的markdown博客自动生成静态的网页，而生成的文件就存储在 public 文件夹中，这其中的每一个html文件都是我们之后在网页中查看博客时候加载的对应文件，而我们在执行 hexo deploy 时，就是要将 public 文件夹下的文件全部部署到我们之前在Nginx配置中设置的 root &#x2F;var&#x2F;www&#x2F;blog 的路径中。</p><h3 id="用rsync部署"><a href="#用rsync部署" class="headerlink" title="用rsync部署"></a>用rsync部署</h3><p>相比较git hook方式，这一种操作更简单，对于小白更不容易出错。</p><h4 id="安装rsync"><a href="#安装rsync" class="headerlink" title="安装rsync"></a>安装rsync</h4><p>rsync的安装分为两部分：服务器端和本地</p><p>服务器端安装：</p><p><code>apt-get install rsync</code></p><p>对于Digital Ocean Ubuntu VPS，大多数的Linux系统已经默认装有 rsync 了，可以运行 rsync 测试下是否已经安装。</p><p>本地安装：</p><p><code>sudo npm install hexo-deployer-rsync --save</code></p><p>rsync配置</p><p>编辑博客文件夹目录下的 <code>_config.yml</code>，找到<code>deploy</code>字段添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: rsync</span><br><span class="line">  host: vps-ip            //这里填写你VPS的IP地址，比如：138.23.23.23</span><br><span class="line">  user: root             //这里填写你登陆VPS所用的用户名，比如：root</span><br><span class="line">  root: /usr/www/blog       //这里填写你在nginx中配置的文件路径</span><br><span class="line">  port: 22               //SSH默认端口号，不需要修改</span><br></pre></td></tr></table></figure><p>配置完毕！在 blog 目录下执行下面一段代码</p><p><code>hexo g &amp;&amp; hexo d</code><br>提示：</p><p>按照提示输入ssh密码后就上传到VPS了，接着在浏览器输入网址就可以看到了。</p><h3 id="git-hook自动部署方案"><a href="#git-hook自动部署方案" class="headerlink" title="git hook自动部署方案"></a>git hook自动部署方案</h3><p>使用git hook和rsync得到的效果是等效的，也就是说，二者中选一种你喜欢的就可以完成配置。<br>说明一下，我本人看Git部署的方式步骤太多太麻烦，所以采用的是rsync的方式进行的，所以对于此文中的Git方式，只是从网络上找到相应的教程，自己并没有进行测试，如果有错漏，请指出。</p><p>安装git</p><p>本地部署工具安装</p><p><code>sudo npm install hexo-deployer-git --save</code></p><p>服务器端安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install git-core</span><br></pre></td></tr></table></figure><p>新增一个名为 git 的用户，并给用户 git 赋予无需密码操作的权限（否则到后面 Hexo 部署的时候会提示无权限）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line"></span><br><span class="line">chmod 740 /etc/sudoers</span><br><span class="line"></span><br><span class="line">vi /etc/sudoers</span><br></pre></td></tr></table></figure><p>在vi编辑中找到如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Allow root to run any commands anywhere</span><br><span class="line">root    ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure><p>在下面添加一行</p><p><code>git   ALL=(ALL)     ALL</code></p><blockquote><p>vim 操作小贴士：打开文件之后要按i进入编辑模式，编辑完以后按Esc，再输入:wq回车才能保存；如果<br>想不保存直接退出请输入:q!</p></blockquote><p>保存退出后执行</p><p><code>chmod 440 /etc/sudoers</code></p><p>接下来要把本地的 SSH 公钥上传到 VPS 。执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line"></span><br><span class="line">cd ~</span><br><span class="line"></span><br><span class="line">mkdir .ssh &amp;&amp; cd .ssh</span><br><span class="line"></span><br><span class="line">touch authorized_keys</span><br><span class="line"></span><br><span class="line">vi authorized_keys</span><br></pre></td></tr></table></figure><p>现在要打开本地的 Git Bash，输入vi ~&#x2F;.ssh&#x2F;id_rsa.pub，把里面的内容复制下来粘贴到上面打开的文件里。</p><p>然后建立放部署的网页的 Git 库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line"></span><br><span class="line">mkdir hexo.git &amp;&amp; cd hexo.git</span><br><span class="line"></span><br><span class="line">git init --bare</span><br></pre></td></tr></table></figure><p>测试一下，如果在 Git Bash 中输入 ssh git@VPS的IP地址 能够远程登录的话，则表示设置成功了。</p><p>如果不成功，并且你的 VPS 的 ssh 端口不是 22 的话，请在Git Bash执行vi ~&#x2F;.ssh&#x2F;config，输入以下内容并保存：（成功就跳过这一步）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host #VPS 的 IP</span><br><span class="line">HostName #VPS 的 IP</span><br><span class="line">User git</span><br><span class="line">Port #SSH 端口</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>初始化git仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/repo</span><br><span class="line"></span><br><span class="line">cd /var/repo</span><br><span class="line"></span><br><span class="line">git init --bare blog.git</span><br></pre></td></tr></table></figure><p>执行上述代码后,我们会在 &#x2F;var&#x2F;repo 路径下创建了一个名为 blog.git 的裸仓库，这个仓库的功能就是将我们deploy的文件通过git hook的方式共享到 &#x2F;var&#x2F;www&#x2F;blog 中，而要想实现这一功能我们还需要进行如下配置：</p><p>在 blog.git&#x2F;hooks 目录下新建一个 post-receive 文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /var/repo/blog.git/hooks</span><br><span class="line"></span><br><span class="line">vim post-receive</span><br></pre></td></tr></table></figure><p>在 post-receive 中添加如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">git --work-tree=/var/www/blog --git-dir=/var/repo/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>设置 post-receive 文件的可执行权限：</p><p><code>chmod +x post-receive</code></p><p>提示：如果设置的路径文件夹并不存在，那么需要创建该文件夹并且赋予你所使用的用户的权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/www/blog</span><br><span class="line">cd /var/www</span><br><span class="line">chown git:git blog</span><br></pre></td></tr></table></figure><h4 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h4><p>编辑博客文件夹目录下的 <code>_config.yml</code>，找到<code>deploy</code>添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: root@mylucky.cyou:/var/repo/blog.git # 此部分修改为你自己的登陆账号和域名，冒号后面为设置的裸仓库的地址</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p>同样在 blog 目录下执行下面一段代码，我们也可以看到我们的文件部署到了服务器上</p><p><code>hexo g &amp;&amp; hexo d</code></p><p>补充一下，我发现在上面的使用certbot 申请ssl证书的步骤之后，它默认的一个配置是会在直接访问http （80）端口的时候返回404页面，而不是重定向到https，后面我修改了一下nginx的配置，完整配置如下，可以做一个参考：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># HTTP server block to redirect to HTTPS</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name mylucky.cyou www.mylucky.cyou;</span><br><span class="line">    return 301 https://$server_name$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># HTTPS server block</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name mylucky.cyou www.mylucky.cyou;</span><br><span class="line"></span><br><span class="line">    # SSL certificate configuration</span><br><span class="line">    ssl_certificate /etc/letsencrypt/live/www.mylucky.cyou/fullchain.pem;</span><br><span class="line">    ssl_certificate_key /etc/letsencrypt/live/www.mylucky.cyou/privkey.pem;</span><br><span class="line">    include /etc/letsencrypt/options-ssl-nginx.conf;</span><br><span class="line">    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;</span><br><span class="line"></span><br><span class="line">    # Access and error logs</span><br><span class="line">    access_log /var/log/nginx/access.log;</span><br><span class="line">    error_log /var/log/nginx/error.log;</span><br><span class="line"></span><br><span class="line">    # Root directory</span><br><span class="line">    root /var/www/blog;</span><br><span class="line">    index index.html;</span><br><span class="line"></span><br><span class="line">    # Enable gzip compression</span><br><span class="line">    gzip on;</span><br><span class="line"></span><br><span class="line">    # Mime types</span><br><span class="line">    include /etc/nginx/mime.types;</span><br><span class="line"></span><br><span class="line">    # Location blocks</span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ /index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~* ^.+\.(css|js|txt|xml|swf|wav)$ &#123;</span><br><span class="line">        access_log off;</span><br><span class="line">        expires 10m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /nginx_status &#123;</span><br><span class="line">        stub_status on;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>整个一个Hexo的Blog的本地和上传方式到此已经完成，剩下的就是补充Blog的内容了<br>对于Blog来说，平台搭建好其实是最初始的步骤，最关键的还是内容，平台什么的并不重要。<br>后面也会弄一些Hexo的设置和使用方法，来进行填充内容。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;虽然已经有了一个&lt;a href=&quot;https://surge.tel/&quot;&gt;blog&lt;/a&gt;，但是那个是用wordpress部署的，是Lucky费了老大劲，帮了不少忙，但是用起来总觉得太臃肿，WordPress就是这样，功能大而全，你想要的都能实现，但是很难实现，需要的东西太</summary>
      
    
    
    
    <category term="hexo教程" scheme="https://mylucky.cyou/categories/hexo%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="https://mylucky.cyou/tags/hexo/"/>
    
    <category term="blog" scheme="https://mylucky.cyou/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>有幸遇见</title>
    <link href="https://mylucky.cyou/post/20231208104329.html"/>
    <id>https://mylucky.cyou/post/20231208104329.html</id>
    <published>2023-12-08T02:43:29.000Z</published>
    <updated>2023-12-19T08:55:41.134Z</updated>
    
    <content type="html"><![CDATA[<p>你能来太好了，能够遇见就是最大的幸运。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;你能来太好了，能够遇见就是最大的幸运。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="碎碎念" scheme="https://mylucky.cyou/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="心情" scheme="https://mylucky.cyou/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>新的开始</title>
    <link href="https://mylucky.cyou/post/20231207212435.html"/>
    <id>https://mylucky.cyou/post/20231207212435.html</id>
    <published>2023-12-07T13:24:35.000Z</published>
    <updated>2023-12-19T08:54:17.018Z</updated>
    
    <content type="html"><![CDATA[<p>想试试用hexo部署一个blog。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;想试试用hexo部署一个blog。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="碎碎念" scheme="https://mylucky.cyou/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="心情" scheme="https://mylucky.cyou/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
</feed>
